<?xml version="1.0"?>
<doc>
    <assembly>
        <name>imbSCI.Reporting</name>
    </assembly>
    <members>
        <member name="T:imbSCI.Reporting.charts.C3WordPressChartBuilder">
            <summary>
            Builder for C3 charts for Gutenberg shortcode block in WordPress page-post content
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.charts.C3WordPressChartBuilder.shortcodeTool">
            <summary>
            Gets or sets the shortcode tool.
            </summary>
            <value>
            The shortcode tool.
            </value>
        </member>
        <member name="M:imbSCI.Reporting.charts.C3WordPressChartBuilder.BuildChart(imbSCI.Reporting.charts.core.chartTypeEnum,imbSCI.Reporting.charts.core.chartFeatures,System.Data.DataTable,imbSCI.Reporting.charts.core.chartSizeEnum,imbSCI.Reporting.charts.core.chartTypeEnum)">
            <summary>
            Builds the chart.
            </summary>
            <param name="chartType">Type of the chart.</param>
            <param name="features">The features.</param>
            <param name="data">The data.</param>
            <param name="size">The size.</param>
            <param name="typesForSeries">The types for series.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.charts.chartTools.buildChart(imbSCI.Reporting.charts.core.chartTypeEnum,imbSCI.Reporting.charts.core.chartFeatures,System.Data.DataTable,imbSCI.Reporting.charts.core.chartSizeEnum,imbSCI.Reporting.charts.core.chartTypeEnum,System.String)">
            <summary>
            Builds the chart string for <c>C3js</c> rendering
            </summary>
            <param name="chartType">Type of chart to create.</param>
            <param name="features">Used features</param>
            <param name="data">Data table</param>
            <param name="size">The size.</param>
            <param name="typesForSeries">The types for series.</param>
            <param name="obj_id">The object identifier.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.charts.chartTools.buildDataInsertHorizontaly(System.Data.DataTable)">
            <summary>
            Builds the data insert horizontaly.
            </summary>
            <param name="dt">The dt.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.charts.chartTools.buildDataInsertVertically(System.Data.DataTable)">
            <summary>
            Builds the CSV of datatable in vertical arangement
            </summary>
            <param name="dt">The dt.</param>
            <returns>CSV value</returns>
        </member>
        <member name="P:imbSCI.Reporting.charts.chartTools.wrapTemplate">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.charts.chartTools.masterTemplate">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.charts.chartTools.featureTemplates">
            <summary>
            static and autoinitiated object
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.charts.chartTools.templates">
            <summary>
            imbControl property templates tipa Dictionary{chartTypeEnum, String}
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.charts.core.chartFeatures.withoutHtml">
            <summary>
            The generated C3 code will be only JavaScript part
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.charts.core.chartFeatures.bindto">
            <summary>
            DEPRICATED
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.charts.core.chartFeatures.transposeTable">
            <summary>
            it will transpose (rotate columns and rows) table, to show data horizontally
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.charts.core.chartTypeEnum.none">
            <summary>
            The donut: prsten-krug izdeljen na procente
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.charts.ShortcodeJSInsertTool">
            <summary>
            Generates shortcode content for WordPress
            </summary>
            <remarks>
            This should be used with proper WordPress plugin for created shortcode. The plugin has to Base64 decode shortcode content. See below PHP example for proper WP plugin
            </remarks>
            <code>
            function jschart_shortcode( $atts, $content = null ) {
            $a = shortcode_atts(array(
                'id' => 'element_id'), $atts );
             $js = base64_decode($a['js']);
            
            return '&lt;div id="' .$a['id']. '" >&lt;/div>&lt;script>'.$js.'&lt;/script>';
            }
            add_shortcode( 'jschart', 'jschart_shortcode' );
            </code>
        </member>
        <member name="M:imbSCI.Reporting.charts.ShortcodeJSInsertTool.Create(System.String,System.String,imbSCI.Core.math.classificationMetrics.reportExpandedData)">
            <summary>
            Creates WordPress shortcode code to embedd the specified js content. 
            </summary>
            <param name="js_content">JavaScript content to be enbedded. If the string contains {0}, it will be replaced with <c>custom_id</c></param>
            <param name="custom_id">DIV identifier, the custom value. Leave empty to have automatically assigned unique ID for created DIV</param>
            <param name="extendedAttributes">Optional pair of additional shortcode attributes</param>
            <returns>WP shortcode code. If <see cref="P:imbSCI.Reporting.charts.ShortcodeJSInsertTool.UseGutenbergContainerBlock"/> it will be wrapped in given gutenberg container, <see cref="P:imbSCI.Reporting.charts.ShortcodeJSInsertTool.GutenbergContainerBlock"/></returns>
        </member>
        <member name="P:imbSCI.Reporting.charts.WordPressChartTool.chartTemplate">
            <summary>
            static and autoinitiated object
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.charts.WordPressKoplasChartTool.chartTemplate">
            <summary>
            static and autoinitiated object
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.config.imbSCIReportingConfig">
            <summary>
            General configuration object for domain of <see cref="N:imbSCI.Reporting"/>
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.config.imbSCIReportingConfig.#ctor">
            <summary>
            Constructor without arguments is obligatory for XML serialization
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.config.imbSCIReportingConfig.isDefaultReplaced">
            <summary>
            Gets or sets a value indicating whether, since program start, <see cref="P:imbSCI.Reporting.config.imbSCIReportingConfig.settings"/> were replaced with another instance, i.e. loaded externally
            </summary>
            <value>
              <c>true</c> if this instance is default replaced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.config.imbSCIReportingConfig.settings">
            <summary>
            General configuration instance for domain of <see cref="N:imbSCI.Reporting"/>
            </summary>
            <value>
            Global settings
            </value>
        </member>
        <member name="P:imbSCI.Reporting.config.imbSCIReportingConfig.doExportCleanDataToo">
            <summary> Export Clean Data together with Excel files </summary>
        </member>
        <member name="T:imbSCI.Reporting.delivery.reportOutputRepository">
             <summary>
            
             </summary>
             <seealso cref="!:resourceDictionaryBase&lt;T&gt;.Object&gt;" />
        </member>
        <member name="P:imbSCI.Reporting.delivery.reportOutputRepository.name">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.delivery.reportOutputRepository.form">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.delivery.reportOutputRepository.basePath">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.delivery.reportOutputRepository.directoryPath">
            <summary>
            path - directory part
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.delivery.reportOutputUnit">
            <summary>
            One unit of output
            </summary>
            <seealso cref="T:imbSCI.Core.reporting.format.reportElementFormSet" />
        </member>
        <member name="P:imbSCI.Reporting.delivery.reportOutputUnit.name">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.delivery.reportOutputUnit.path">
            <summary>
            Logical level path - used for search and data binding
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.delivery.reportOutputUnit.directoryRelativePath">
            <summary>
            path - directory part
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.delivery.reportOutputUnit.filenamePath">
            <summary>
            path part - with filename
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.delivery.reportOutputUnit.fileformat">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.delivery.reportOutputUnit.level">
            <summary>
            level
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.delivery.reportOutputUnit.form">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.delivery.reportOutputUnit.output">
            <summary>
            typed output made by IRender instance
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.enums.imbEnumConverterExtensions">
            <summary>
            Extensions to convert different enum types from one to another, including string
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.enums.imbEnumConverterExtensions.doThrow(imbSCI.Data.enums.onErrorPolicy)">
            <summary>
            Returns TRUE if the <c>policy</c> instructs throwing exception
            </summary>
            <param name="policy">The policy.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.enums.imbEnumConverterExtensions.getFileExtension(imbSCI.Data.enums.appends.appendLinkType)">
            <summary>
            Gets the file extension.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.enums.imbEnumConverterExtensions.getAppendTypeKind(imbSCI.Data.enums.appends.appendType)">
            <summary>
            Returns appendTypeKind according to appendType
            </summary>
            <param name="type">The type.</param>
            <returns>Proper kind of append</returns>
        </member>
        <member name="M:imbSCI.Reporting.enums.imbEnumConverterExtensions.convertRoleToType(imbSCI.Core.reporting.style.enums.appendRole,imbSCI.Data.enums.appends.appendType,imbSCI.Data.enums.appends.appendType)">
            <summary>
            Converts <c>role</c> into <c>appendType</c>
            </summary>
            <param name="__role">The role.</param>
            <param name="__overrideResult">If not <c>none</c> it will override any conversion and return this as result</param>
            <param name="__defaultType">The default append Type to return if no rule is applicable.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.enums.imbEnumConverterExtensions.getDefaultExtension(imbSCI.Core.reporting.format.reportOutputFormatName)">
            <summary>
            Alias of <see cref="M:imbSCI.Reporting.enums.imbEnumConverterExtensions.getFilenameExtension(imbSCI.Core.reporting.format.reportOutputFormatName)"/>
            </summary>
            <param name="outputFormat"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.enums.imbEnumConverterExtensions.getFilenameExtension(imbSCI.Core.reporting.format.reportOutputFormatName)">
            <summary>
            Gets the filename extension for <c>format</c>. String is without starting dot.
            </summary>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.enums.reportShortActions.f(System.String,System.Object[])">
            <summary>
            Formats <c>fin</c> parameters into <c>format</c> string
            </summary>
            <param name="format">The format.</param>
            <param name="fin">The fin.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.enums.reportShortActions.t(System.String,System.Enum)">
            <summary>
            Adds template parameter placeholder
            </summary>
            <param name="output"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.enums.reportShortActions.t(System.String,imbSCI.Data.enums.fields.templateFieldBasic)">
            <summary>
            Adds template parameter placeholder
            </summary>
            <param name="output"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.enums.reportShortActions.q(System.String,System.String)">
            <summary>
            Places in quote \"
            </summary>
            <param name="output"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.enums.reportShortActions.a(System.String,imbSCI.Data.enums.fields.templateFieldBasic)">
            <summary>
            Short string concating
            </summary>
            <param name="output"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.enums.reportShortActions.o(System.String,System.Object)">
            <summary>
            synonim of a() - uses .ToString() on input object
            </summary>
            <param name="output"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.enums.reportShortActions.a(System.String,System.String)">
            <summary>
            short string contacting - a from Add
            </summary>
            <param name="output"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="F:imbSCI.Reporting.enums.reportBaseExtensions.custom">
            <summary>
            Primenjuje custom ekstenziju u skladu sa izvestajem
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.enums.templateFieldContentStructure">
            <summary>
            Fields of documentSet structure report
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.enums.templateFieldContentStructure.str_documentCount">
            <summary>
            document count - total number of documents in set
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.enums.templateFieldContentStructure.str_pageCount">
            <summary>
             page count - total number of pages
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.enums.templateFieldContentStructure.str_blockCount">
            <summary>
            block count - total number of blocks
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.enums.templateFieldContentStructure.str_scriptCount">
            <summary>
            script count - number of script instructions
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.enums.templateFieldContentStructure.str_renderName">
            <summary>
             render name - name of rendering engine
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.enums.templateFieldContentStructure.str_themeCode">
            <summary>
            Code Name of theme
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.exceptions.aceReportException">
             <summary>
            
             </summary>
             <seealso cref="!:imbSCI.Cores.core.exceptions.aceReportException" />
        </member>
        <member name="M:imbSCI.Reporting.Html.Builders.JSBuilder.AppendSelectXPath(System.String)">
            <summary>
            Like: document.evaluate('/html/body/div[4]/div[2]/div/div/div/div[3]/div/span[2]/span', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue
            </summary>
            <param name="xpath">The xpath.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.Html.Builders.JSBuilder.StartSelectXPath(System.String)">
            <summary>
            Like: document.evaluate('/html/body/div[4]/div[2]/div/div/div/div[3]/div/span[2]/span', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue
            </summary>
            <param name="xpath">The xpath.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.Html.Units.HtmlUnitTools.GetInsertPosition(imbSCI.Reporting.Html.Units.Core.HtmlUnitLocation,System.String)">
            <summary>
            Designate string index position where a unit should be inserted
            </summary>
            <param name="UnitLocation">The unit location.</param>
            <param name="html">The HTML.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">UnitLocation - Location enum must have start or end bits set</exception>
        </member>
        <member name="M:imbSCI.Reporting.Html.Units.JS.JavaScriptBlockBuilder.ToBlock(System.String,System.String)">
            <summary>
            Optional code prefix and sufix
            </summary>
            <param name="codePrefix">The code prefix.</param>
            <param name="codeSufix">The code sufix.</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.includes.reportIncludeFile">
            <summary>
            Tip include fajla
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.includes.reportIncludeFile.extension">
            <summary>
            ekstenzija
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.includes.reportIncludeFile.name">
            <summary>
            file name izlaznog fajla - ekstenzija ostaje ista kao ulazna
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.includes.reportIncludeFile.filename">
            <summary>
            ime fajla zajedno sa ekstenzijom
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.includes.reportIncludeFile.localOutputPath">
            <summary>
            lokalna putanja u izlaznom folderu, sve sa filename.extension na kraju
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.includes.reportIncludeFile.sourceFilePath">
            <summary>
            putanja ka fajlu koji treba da se ubaci pored izvestaja
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.includes.reportIncludeFile.filetype">
            <summary>
            Tip fajla koji treba da se ubaci
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.includes.reportIncludeFile.doLocalCopy">
            <summary>
            Da li treba da napravi lokalnu kopiju fajla koji se ubacuje
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.includes.reportIncludeFileCollection">
            <summary>
            imbCollectionMeta namenska kolekcija za  reportIncludeFile
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.includes.reportIncludeFileCollection.AddFile(System.String,imbSCI.Data.enums.reporting.reportIncludeFileType)">
            <summary>
            Dodaje novi fajl
            </summary>
            <param name="__path"></param>
            <param name="__type"></param>
        </member>
        <member name="M:imbSCI.Reporting.includes.reportIncludeFileCollection.prepareIncludes(System.String)">
            <summary>
            Kopira sve fajlove iz kolekcije na datu putanju
            </summary>
            <param name="outputPath"></param>
        </member>
        <member name="T:imbSCI.Reporting.interfaces.IMetaComposeAndConstruct">
            <summary>
            Objects that are subjects of compilation and execution
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.interfaces.IMetaComposeAndConstruct.collect(imbSCI.Core.collection.PropertyCollectionDictionary)">
            <summary>
            Collects data trough this meta node and its children
            </summary>
            <param name="data">PropertyCollectionDictionary to fill in</param>
            <returns>New or updated Dictionary</returns>
        </member>
        <member name="T:imbSCI.Reporting.interfaces.IHasReportRegistry">
             <summary>
            
             </summary>
        </member>
        <member name="T:imbSCI.Reporting.interfaces.IMetaHasHeader">
             <summary>
            
             </summary>
             \ingroup_disabled docCore
        </member>
        <member name="T:imbSCI.Reporting.interfaces.IObjectWithIDandName">
            <summary>
            Objekat koji ima ime i id
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.interfaces.ITextAppendContentExtended.AppendExe(imbSCI.Reporting.script.exeAppenders.IExeAppend)">
            <summary>
            Appends the executable.
            </summary>
            <param name="exeRunner">The executable runner.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.interfaces.ITextAppendContentExtended.AppendExe``1">
            <summary>
            Appends the executable.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.links.enums.metaPageLinkRole">
            <summary>
            Uloga koju ima stranica
            </summary>
            \ingroup_disabled docElementCore
        </member>
        <member name="F:imbSCI.Reporting.links.enums.metaPageLinkRole.linkedView">
            <summary>
            The page is actually subpage of this page - it opens inside scrollviewer/in the same sheet/PDF
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.links.enums.metaPageLinkRole.linkedPage">
            <summary>
            The page is among main links od this page, but it is not sub page
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.links.enums.metaPageLinkRole.unlinkedPage">
            <summary>
            The content is created and saved next to page - but it is not linked to index and other pages
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.links.enums.metaPageLinkRole.externalPage">
            <summary>
            Link of external url
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.links.enums.metaPageLinkRole.documentation">
            <summary>
            The page has documentation role (API generation etc)
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.links.enums.metaPageLinkRole.help">
            <summary>
            Programming help and reference
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.groups.reportInPackageGroup.priority">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.groups.reportInPackageGroup.name">
            <summary>
            naziv grupe
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.groups.reportInPackageGroup.description">
            <summary>
            group description
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.groups.reportInPackageGroup.parent">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.links.groups.reportInPackageGroup.getPath(System.String)">
            <summary>
            Vraca putanju ka ovoj grupi
            </summary>
            <param name="splitter"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.links.groups.reportInPackageGroupCollection.createByPath(System.String)">
            <summary>
            Kreira sve grupe i hijerarhiju grupa - na osnovu putanje koja moze imati za spliter bilo koji karakter koji nije broj ili slovo
            </summary>
            <param name="groupNamePath"></param>
            <returns>Poslednju grupu koju je kreirao</returns>
        </member>
        <member name="T:imbSCI.Reporting.links.reportLink">
            <summary>
            Report item link
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.links.reportLink.#ctor(imbSCI.Reporting.links.reportLink,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.links.reportLink"/> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:imbSCI.Reporting.links.reportLink.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.links.reportLink"/> class.
            </summary>
            <param name="__title">The title.</param>
            <param name="__description">The description.</param>
            <param name="__path">The path.</param>
        </member>
        <member name="M:imbSCI.Reporting.links.reportLink.#ctor(System.String,System.String,imbSCI.Reporting.links.reportRegistry.reportingRegistryQuery)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.links.reportLink"/> class.
            </summary>
            <param name="__title">The title.</param>
            <param name="__description">The description.</param>
            <param name="__query">The query.</param>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLink.state">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLink.registryQuery">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLink.importance">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLink.element">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLink.effectivePriority">
            <summary>Priority used in menu sorting</summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLink.priority">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLink.linkTitle">
            <summary>
            Naslov koji se prikazuje u linku ka ovom izvestaju. Ako je naslov empty onda nece biti linkovanja
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLink.linkDescription">
            <summary>
            Kratak opis ispod linka.
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLink.linkPath">
            <summary>
            relativna putanja koju koristi link
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLink.group">
            <summary>
            referenca prema grupi
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.links.reportLinkCollection">
            <summary>
            Report link collection
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.links.reportLinkCollection.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.links.reportLinkCollection"/> class. Creates main group with specified name and secription
            </summary>
            <param name="mainGroupName">Name of the main group.</param>
            <param name="mainGroupDesc">The main group desc.</param>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollection.items">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollection.title">
            <summary>
            naziv kolekcije linkova
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollection.description">
            <summary>
            opis kolekcije linkova
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollection.priority">
            <summary>
            Prioritet
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.links.reportLinkCollection.AddGroup(System.String,System.String,System.Int32)">
            <summary>
            Adds the group.
            </summary>
            <param name="title">The title.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollection.preventDuplicateURLs">
            <summary> </summary>
        </member>
        <member name="M:imbSCI.Reporting.links.reportLinkCollection.AddLink(System.String,System.String,System.String)">
            <summary>
            Adds new link and associates it with the current group
            </summary>
            <param name="title">The title.</param>
            <param name="description">The description.</param>
            <param name="url">The URL.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.links.reportLinkCollection.AddLinkToElement(imbSCI.Core.interfaces.IMetaContentNested,System.String,System.String,imbSCI.Core.reporting.ILogBuilder)">
            <summary>
            Linking to element instance, it will be resolved by <see cref="T:imbSCI.Reporting.meta.metaTools"/>
            </summary>
            <param name="toElement">To element.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollection.currentGroup">
            <summary>
            The grup that is currently opened 2017c
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollection.groups">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollection.templateBootstrapAllowedExtensions">
            <summary>
            Extensions that are allowed
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.links.reportLinkCollectionSet">
            <summary>
            Part of report link collection
            </summary>
            <seealso cref="!:System.Collections.Generic.Dictionary&lt;System.String, imbSCI.Reporting.links.reportLinkCollection&gt;" />
            <seealso cref="!:imbSCI.Reporting.interfaces.IMakeHtml" />
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollectionSet.lastNamingIteration">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollectionSet.items">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollectionSet.name">
            <summary>
            Name for this instance
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollectionSet.description">
            <summary>
            Human-readable description of object instance
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkCollectionSet.main">
            <summary>
            Main group - the root folder
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.links.reportLinkRegistry">
            <summary>
            Global registry of links
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.links.reportLinkRegistry.getLinkCollection(System.String)">
            <summary>
            Gets the link collection.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkRegistry.Item(System.String)">
            <summary>
            Gets the <see cref="T:imbSCI.Reporting.links.reportLinkCollection"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:imbSCI.Reporting.links.reportLinkCollection"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkRegistry.items">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.links.reportLinkRegistry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.links.reportLinkRegistry"/> class.
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportLinkToolbar.size">
             <summary>
            
             </summary>
        </member>
        <member name="T:imbSCI.Reporting.links.reportRegistry.recordVsReportRegistryBase">
            <summary>
            Global tree content structure registar
            </summary>
            <seealso cref="!:System.Collections.Generic.IDictionary&lt;System.String, imbSCI.Reporting.collections.reportRegistry.contentTreeDomainCollection&gt;" />
        </member>
        <member name="M:imbSCI.Reporting.links.reportRegistry.recordVsReportRegistryBase.makeToken(imbSCI.Reporting.links.reportRegistry.reportRegistryEnum,System.String)">
            <summary>
            Makes the token.
            </summary>
            <param name="kind">The kind.</param>
            <param name="needle">The needle.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.links.reportRegistry.recordVsReportRegistryBase.makeToken(imbSCI.DataComplex.data.modelRecords.IModelRecord)">
            <summary>
            Makes the token.
            </summary>
            <param name="forRecord">For record.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.links.reportRegistry.recordVsReportRegistryBase.GetReport``1(imbSCI.DataComplex.data.modelRecords.IModelRecord)">
            <summary>
            Gets the report.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="forRecord">For record.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.links.reportRegistry.recordVsReportRegistryBase.GetParticularReport``1(System.String,System.String)">
            <summary>
            Gets the particular report.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="particularID">The particular identifier.</param>
            <param name="needle">The needle.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.links.reportRegistry.recordVsReportRegistryBase.registerGeneral(System.String,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Registers the general.
            </summary>
            <param name="needle">The needle.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:imbSCI.Reporting.links.reportRegistry.recordVsReportRegistryBase.registerParticular(System.String,System.String,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Registers the particular.
            </summary>
            <param name="particularID">The particular identifier.</param>
            <param name="needle">The needle.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:imbSCI.Reporting.links.reportRegistry.recordVsReportRegistryBase.register(imbSCI.Reporting.links.reportRegistry.reportRegistryEnum,System.String,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Registers the specified kind.
            </summary>
            <param name="kind">The kind.</param>
            <param name="needle">The needle.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:imbSCI.Reporting.links.reportRegistry.recordVsReportRegistryBase.registerForRecord(imbSCI.DataComplex.data.modelRecords.IModelRecord,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Registers for record.
            </summary>
            <param name="record">The record.</param>
            <param name="content">The content.</param>
        </member>
        <member name="P:imbSCI.Reporting.links.reportRegistry.recordVsReportRegistryBase.byRecord">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportRegistry.recordVsReportRegistryBase.byReport">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportRegistry.recordVsReportRegistryBase.byToken">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportRegistry.reportingRegistryQuery.reportLevelString">
            <summary> </summary>
        </member>
        <member name="M:imbSCI.Reporting.links.reportRegistry.reportingRegistryQuery.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.links.reportRegistry.reportingRegistryQuery"/> class.
            </summary>
            <param name="__path">The path.</param>
        </member>
        <member name="P:imbSCI.Reporting.links.reportRegistry.reportingRegistryQuery.level">
            <summary> </summary>
        </member>
        <member name="M:imbSCI.Reporting.links.reportRegistry.reportingRegistryQuery.#ctor(System.String,System.String)">
            <summary>
            Creates particular query
            </summary>
            <param name="__particularID">The particular identifier.</param>
            <param name="__needle">The needle.</param>
        </member>
        <member name="P:imbSCI.Reporting.links.reportRegistry.reportingRegistryQuery.kind">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportRegistry.reportingRegistryQuery.needle">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.links.reportRegistry.reportingRegistryQuery.particularID">
            <summary> </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.basic.metaContentNoChildren">
            <summary>
            Pseudo class to serve as base of metaObjects with no children
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.core.MetaContentNestedBase" />
        </member>
        <member name="P:imbSCI.Reporting.meta.basic.metaContentNoChildren.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the specified name.
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaAttachmentBlock">
            <summary>
            Attached file
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase" />
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaAttachmentBlock.includeFilePath">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaAttachmentBlock.filename">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaAttachmentBlock.caption">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaAttachmentBlock.description">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaAttachmentBlock.templateNeedle">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaAttachmentBlock.isDataTemplate">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaAttachmentBlock.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.blocks.metaAttachmentBlock"/> class.
            </summary>
            <param name="__includeFilePath">The include file path.</param>
            <param name="__filename">The filename.</param>
            <param name="__caption">The caption.</param>
            <param name="__description">The description.</param>
            <param name="__templateNeedle">The template needle.</param>
            <param name="__isDataTemplate">if set to <c>true</c> [is data template].</param>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaCodeBlock">
            <summary>
            wrapper koji prikazuje content
            </summary>
            \ingroup_disabled docBlocks_common
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaCodeBlock.codetypename">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaCodeBlock.title">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaCodeBlock.description">
            <summary>
            Content for footer
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaCodeBlock.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Code block -- containes custom code that may have template params
            </summary>
            <param name="__name">What whould be writen at head of the block? leave empty to hide head</param>
            <param name="__description">What would be written as footer of the block? leave empty to hide footer </param>
            <param name="__url">What link to put at bottom of footer? no link if empty</param>
            <param name="__code"></param>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase">
            <summary>
            Base class shared by page content elements and higher
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.core.MetaContentNestedBase" />
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase.title">
            <summary> </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase.collect(imbSCI.Core.collection.PropertyCollectionDictionary)">
            <summary>
            Collects internal data of this container.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase.construct(System.Object[])">
            <summary>
            Performs construction (or upgrade) of DOM according to cpecific data set supplied.
            </summary>
            <remarks>
            <para>This method is meant to be called just after constructor and before <c>compose</c> or other application method. </para>
            <para>It is not automatically called by constructor for easier prerequirements handling. </para>
            <para>Inside the method it is safe to access <c>parent</c>, <c>page</c>, <c>document</c> or any other automatic property.</para>
            <para>This method is meant to be called just once: it should remove any existing dynamically created nodes at beginning of execution - in purpose that any subsequent call produces the same result</para>
            </remarks>
            <param name="resources"></param>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase.compose(imbSCI.Reporting.script.docScript)">
            <summary>
            Composes a set of <c>docScriptInstruction</c> into supplied <c>docScript</c> instance or created blank new instance with <c>name</c> of this metaContainer
            </summary>
            <param name="script">The script.</param>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase.colors">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase.position">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase.width">
             <summary>
            
             </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaDataTable">
            <summary>
            Content block with DataTable
            </summary>
            \ingroup_disabled docBlocks_common
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaDataTable.stylerSettings">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaDataTable.construct(System.Object[])">
            <summary>
            Expects: theme,
            </summary>
            <param name="resources"></param>
            <remarks>
            <para>This method is meant to be called just after constructor and before <c>compose</c> or other application method. </para>
            <para>It is not automatically called by constructor for easier prerequirements handling. </para>
            <para>Inside the method it is safe to access <c>parent</c>, <c>page</c>, <c>document</c> or any other automatic property.</para>
            <para>This method is meant to be called just once: it should remove any existing dynamically created nodes at beginning of execution - in purpose that any subsequent call produces the same result</para>
            </remarks>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaDataTable.title">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaDataTable.table">
            <summary>
            data table to show
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaDocScriptBlock">
            <summary>
            Block of custom docScript instructions to be inserted at block invocation
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase" />
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaDocScriptBlock.instructions">
            <summary>
            instructions to inject
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaExternalBlock">
            <summary>
            Imports content from file or <see cref="!:imbSCI.Reporting.reporting.render.ITextRender"/> instance
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase" />
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaExternalBlock.title">
            <summary>
            Name for this instance
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaExternalBlock.description">
            <summary>
            Human-readable description of object instance
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaExternalBlock.includeFilePath">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaExternalBlock.includeTextBuilder">
            <summary> </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaExternalBlock.compose(imbSCI.Reporting.script.docScript)">
            <summary>
            Composes a set of <c>docScriptInstruction</c> into supplied <c>docScript</c> instance or created blank new instance with <c>name</c> of this metaContainer
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaFileInfo.construct(System.Object[])">
            <summary>
            Performs construction (or upgrade) of DOM with:
            </summary>
            <param name="resources"></param>
            <remarks>
            <para>This method is meant to be called just after constructor and before <c>compose</c> or other application method. </para>
            <para>It is not automatically called by constructor for easier prerequirements handling. </para>
            <para>Inside the method it is safe to access <c>parent</c>, <c>page</c>, <c>document</c> or any other automatic property.</para>
            <para>This method is meant to be called just once: it should remove any existing dynamically created nodes at beginning of execution - in purpose that any subsequent call produces the same result</para>
            </remarks>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaFooter">
            <summary>
            Meta descriptive information container for FOOTER
            </summary>
            \ingroup_disabled docBlocks_common
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaFooter.bottomLine">
            <summary>
            The last line on bottom of the document
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaHeader">
            <summary>
            Meta descriptive information container for HEADER
            </summary>
            \ingroup_disabled docBlocks_common
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaHeader.construct(System.Object[])">
            <summary>
            Performs construction (or upgrade) of DOM with:
            </summary>
            <param name="resources"></param>
            <remarks>
            <para>This method is meant to be called just after constructor and before <c>compose</c> or other application method. </para>
            <para>It is not automatically called by constructor for easier prerequirements handling. </para>
            <para>Inside the method it is safe to access <c>parent</c>, <c>page</c>, <c>document</c> or any other automatic property.</para>
            <para>This method is meant to be called just once: it should remove any existing dynamically created nodes at beginning of execution - in purpose that any subsequent call produces the same result</para>
            </remarks>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaHeader.title">
            <summary>
            Title in document header
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaHeader.#ctor(System.String,System.String,System.String[])">
            <summary>
            Main constructor for header
            </summary>
            <param name="__title">Title of the document</param>
            <param name="__description">Description line</param>
            <param name="inputs">Extra content lines -- shown under description</param>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaKeywords">
            <summary>
            container for keywords describing this document
            </summary>
            \ingroup_disabled docBlocks_common
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaLink">
            <summary>
            Meta representation of link
            </summary>
            docBlocks_elementary
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaLink.description">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaLink.tool">
            <summary>
            Associated tool to open with
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaLink.display">
            <summary>
            Display option
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaLink.url">
            <summary>
            Url to open - may be null if link is not external
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaLink.title">
            <summary>
            prefered display title
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaLink.target">
            <summary>
            Target on what this link points - may be null if link is not internal
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaLink.type">
            <summary>
            Link type
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaLinkCollection">
            <summary>
            Meta representation for group of links
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaLinkCollection.description">
            <summary>
            Description line about the links
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaLinkCollection.links">
            <summary>
            kolekcija linkova
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaLinkCollection.AddLink(imbSCI.Core.interfaces.IMetaContentNested,System.String,System.Int32)">
            <summary>
            Adding internal link
            </summary>
            <param name="__target"></param>
            <param name="__parent"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaLinkCollection.AddLink(System.String,System.String,System.String,System.Int32)">
            <summary>
            Adding external link
            </summary>
            <param name="__name"></param>
            <param name="__description"></param>
            <param name="__url"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaLinkCollection.AddAnchor(System.String,System.String,System.Int32)">
            <summary>
            Adding on page anchor
            </summary>
            <param name="__name"></param>
            <param name="__description"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaLinkCollection.indexOf(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Place of link inside the collection
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaLinkCollection.Count">
            <summary>
            Number of links
            </summary>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaLinkCollection.sortChildren">
            <summary>
            Shorts all links by priority
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaLinkCollection.type">
            <summary>
            type of this link collection
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaLinkCollection.rootRelativePath">
            <summary>
            Path from which this link collection point its links
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaLinkCollection.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaLinkCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaListViewer">
            <summary>
            Block for displaying list of values/
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase" />
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaListViewer.pairSettings">
            <summary>
            Settings of variable pair display
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaListViewer.variables">
            <summary>
            Variables to show
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaListViewer.description">
            <summary>
            Description of variable pairs
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaListViewer.doHorizontal">
            <summary>
            Render variables into horizontal table
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaMetaIncludeBlock">
            <summary>
            Block of custom docScript instructions to be inserted at block invocation
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase" />
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaNotation">
            <summary>
            Notation for referencing
            </summary>
            \ingroup_disabled docBlocks_common
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaNotation.AppendDataFields(System.Data.PropertyCollection)">
            <summary>
            Appends its data points into new or existing property collection
            </summary>
            <param name="data">Property collection to add data into</param>
            <returns>Updated or newly created property collection</returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaNotation.compose(imbSCI.Reporting.script.docScript)">
            <summary>
            Composes a set of <c>docScriptInstruction</c> into supplied <c>docScript</c> instance or created blank new instance with <c>name</c> of this metaContainer
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaNotation.description">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaNotation.url">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaNotation.softwareName">
            <summary>
            Name of software generated report
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaNotation.copyright">
            <summary>
            Copyright information - usually include year, copyright sign and all rights reserved
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaNotation.organization">
            <summary>
            Name of organization
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaNotation.author">
            <summary>
            Name of author
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaSimpleAppend.type">
            <summary>
            Append Type to use for appending each line of this content
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaSystemInfo.construct(System.Object[])">
            <summary>
            Performs construction (or upgrade) of DOM with:
            </summary>
            <param name="resources"></param>
            <remarks>
            <para>This method is meant to be called just after constructor and before <c>compose</c> or other application method. </para>
            <para>It is not automatically called by constructor for easier prerequirements handling. </para>
            <para>Inside the method it is safe to access <c>parent</c>, <c>page</c>, <c>document</c> or any other automatic property.</para>
            <para>This method is meant to be called just once: it should remove any existing dynamically created nodes at beginning of execution - in purpose that any subsequent call produces the same result</para>
            </remarks>
        </member>
        <member name="T:imbSCI.Reporting.meta.blocks.metaVariablePairs">
            <summary>
            Displays table with variable pairs
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.blocks.MetaContainerNestedBase" />
        </member>
        <member name="M:imbSCI.Reporting.meta.blocks.metaVariablePairs.construct(System.Object[])">
            <summary>
            Performs construction (or upgrade) of DOM according to cpecific data set supplied.
            </summary>
            <param name="resources"></param>
            <remarks>
            <para>This method is meant to be called just after constructor and before <c>compose</c> or other application method. </para>
            <para>It is not automatically called by constructor for easier prerequirements handling. </para>
            <para>Inside the method it is safe to access <c>parent</c>, <c>page</c>, <c>document</c> or any other automatic property.</para>
            <para>This method is meant to be called just once: it should remove any existing dynamically created nodes at beginning of execution - in purpose that any subsequent call produces the same result</para>
            </remarks>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaVariablePairs.variables">
            <summary>
            Variables to show
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaVariablePairs.description">
            <summary>
            Description of variable pairs
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.blocks.metaVariablePairs.doHorizontal">
            <summary>
            Render variables into horizontal table
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.collection.linksScripts">
            <summary>
            Collection of linked JavaScripts - to be placed in HEAD tag as links or to be embedded before end of the content
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.collection.linksStylesheets">
            <summary>
            Collection of linked stylesheets - to be placed in HEAD tag as css link
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.collection.linksStylesheets.AddStyleSheet(System.String)">
            <summary>
            Add CSS file
            </summary>
            <param name="__filenameWithExtension">just filename of CSS file</param>
            <returns>Created link</returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.collection.metaLinkCollectionType">
            <summary>
            How this link collection makes url
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.collection.metaLinkCollectionType.unknown">
            <summary>
            It will pass links as they are
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.collection.metaLinkCollectionType.externalWeb">
            <summary>
            It will ensure that links are with URL shema
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.collection.metaLinkCollectionType.relative">
            <summary>
            It will create relative URL accorting to collection location
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.collection.metaLinkCollectionType.absolute">
            <summary>
            It will create absolute URLs according to collection location
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.core.MetaContentNestedBase">
            <summary>
            Meta container base class
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.logger">
            <summary>
            Gets the logger of the root element - or it's own if it has no parent
            </summary>
            <value>
            The logger.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.description">
            <summary>
            Description content under the main name
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.context">
            <summary>
            Execution context reference
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.core.MetaContentNestedBase.logStructure(System.String)">
            <summary>
            Logs the structure.
            </summary>
            <param name="prefix">The prefix.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.core.MetaContentNestedBase.resolve(imbSCI.Core.reporting.style.enums.metaModelTargetEnum,System.String,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Resolves <see cref="!:imbSCI.Reporting.reporting.style.enums.metaModelTargetEnum" /> against <c>metaContent</c> DOM
            </summary>
            <param name="target">The kind of relative navigation applied</param>
            <param name="needle">The needle: text/string/path used by certain <see cref="!:imbSCI.Reporting.reporting.style.enums.metaModelTargetEnum" /></param>
            <param name="output">Default <see cref="T:imbSCI.Core.interfaces.IMetaContentNested" /> if resolve fails</param>
            <returns>
            Result of resolution
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <seealso cref="!:imbSCI.Data.extensions.data.imbPathExtensions.getChildByPath(IObjectWithChildSelector, string)" />
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.items">
            <summary>
            Default primary children collection
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.core.MetaContentNestedBase.CleanNeedle(System.String)">
            <summary>
            Searches for children in all available collections
            </summary>
            <param name="needle">The needle.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.core.MetaContentNestedBase.AppendDataFields(System.Data.PropertyCollection)">
            <summary>
            Appends its data points into new or existing property collection
            </summary>
            <param name="data">Property collection to add data into</param>
            <returns>Updated or newly created property collection</returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.core.MetaContentNestedBase.setVisibility(System.Boolean)">
            <summary>
            Is visibility changed?
            </summary>
            <param name="newValue">Value of visibility to be set</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.document">
            <summary>
            The first document in parent structure - closest to this
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.page">
            <summary>
            The first page in parent structure - closest to this
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.root">
            <summary>
            Top parent object
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.core.MetaContentNestedBase._name">
            <summary>
            Name of this instance of nested content object
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.name">
            <summary>
            Naziv komponente
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.id">
            <summary>
            ID
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.priority">
            <summary>
            Priority defines order of blocks
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.visible">
            <summary>
            Controls render visibility of the content block
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.content">
            <summary>
            Text content of the meta item. For headers it is written below description block. For footers it comes before bottomline
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.parent">
            <summary>
            refernca prema parent objektu
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.path">
            <summary>
            Path from root object to this object - including this
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.isThisRootPage">
            <summary>
            Gets a value indicating whether this instance is this root page.
            </summary>
            <value>
              <c>true</c> if this instance is this root page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.isThisRoot">
            <summary>
            Gets a value indicating whether this instance is this root.
            </summary>
            <value>
              <c>true</c> if this instance is this root; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.meta.core.MetaContentNestedBase.isThisDocument">
            <summary>
            Gets a value indicating whether this instance is this document.
            </summary>
            <value>
              <c>true</c> if this instance is this document; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:imbSCI.Reporting.meta.data.dataProviderForStyler">
            <summary>
            Collection of styler settings
            </summary>
            <seealso cref="T:System.Data.PropertyCollection" />
        </member>
        <member name="T:imbSCI.Reporting.meta.data.dataProviderTools">
            <summary>
            Set of static extensions used for data packaging and delovery to metaContent model
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.data.dataProviderTools.setTitleDescAndBottomLine(System.Data.PropertyCollection,System.String,System.String,System.String)">
            <summary>
            Sets the title, description and/or bottom line
            </summary>
            <param name="data">The data.</param>
            <param name="title">The title.</param>
            <param name="description">The description.</param>
            <param name="bottomLine">The bottom line.</param>
            <returns>New or existing data collection with data inside</returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.data.dataProviderTools.setColors(System.Data.PropertyCollection,imbSCI.Core.reporting.colors.acePaletteRole,imbSCI.Core.reporting.colors.acePaletteRole)">
            <summary>
            Sets the colors.
            </summary>
            <param name="data">The data.</param>
            <param name="mainColor">Color of the main.</param>
            <param name="layoutColor">Color of the layout.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.data.dataProviderTools.setSizing(System.Data.PropertyCollection,System.Int32,System.Int32,System.Boolean,imbSCI.Core.reporting.colors.acePaletteVariationRole,imbSCI.Core.reporting.style.enums.appendRole)">
            <summary>
            Sets the sizing.
            </summary>
            <param name="data">The data.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="doMerge">if set to <c>true</c> [do merge].</param>
            <param name="varRole">The variable role.</param>
            <param name="role">The role.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.data.dataProviderTools.setVariatorFlags(System.Data.PropertyCollection,imbSCI.Core.enums.cursorVariatorHeadFootFlags,imbSCI.Data.enums.appends.appendTableOptionFlags,imbSCI.Data.enums.cursorVariatorOddEvenFlags,imbSCI.Core.reporting.style.core.styleFourSide)">
            <summary>
            Sets the variator flags.
            </summary>
            <param name="data">The data.</param>
            <param name="headFoot">The head foot.</param>
            <param name="tableOps">The table ops.</param>
            <param name="oddEven">The odd even.</param>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.data.dataProviderTools.setSystemStatus(System.Data.PropertyCollection,System.String,System.Boolean)">
            <summary>
            Sets the system status.
            </summary>
            <param name="data">The data.</param>
            <param name="log">The log.</param>
            <param name="completeRefresh">if set to <c>true</c> [complete refresh].</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.deliveryInstance">
            <summary>
            Managed report generation and deliveryInstance
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryInstance.#ctor(imbSCI.Reporting.meta.delivery.deliveryUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.delivery.deliveryInstance"/> class.
            </summary>
            <param name="__unit">The unit.</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryInstance.AppendDataFields(System.Data.PropertyCollection)">
            <summary>
            Appends the data fields.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryInstance.executeAndSave(imbSCI.Reporting.meta.documentSet.metaDocumentRootSet,System.String,System.Data.PropertyCollection)">
            <summary>
            Calls prepare and then <see cref="M:imbSCI.Reporting.meta.delivery.deliveryInstance.execute(imbSCI.Reporting.meta.documentSet.metaDocumentRootSet,System.String,System.Data.PropertyCollection)"/>
            </summary>
            <param name="report">The report.</param>
            <param name="runstamp">The runstamp.</param>
            <param name="__data">The data.</param>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryInstance.doBuildDeliveryMeta">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryInstance.execute(imbSCI.Reporting.meta.documentSet.metaDocumentRootSet,System.String,System.Data.PropertyCollection)">
            <summary>
            Executes the and save.
            </summary>
            <param name="report">The report.</param>
            <param name="runstamp">The runstamp.</param>
            <param name="__data">The data.</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryInstance.cleanOutputFolder">
            <summary>
            Cleans the output folder.
            </summary>
            <exception cref="T:System.Exception">
            The deliveryInstance instance is not ready. Call executePrepare first
            or
            Sandbox Exception: can't delete files outside application folder [" + fileOpsBase.applicationFolder + "]. Requested delete path [
            </exception>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryInstance.folderPrepare(System.String)">
            <summary>
            Prepares the output folders --
            </summary>
            <param name="runstamp">The runstamp or adjuster output folder name</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryInstance.composeOperationStart(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.interfaces.IMetaContentNested,imbSCI.Reporting.script.docScript)">
            <summary>
            Composes the operation start.
            </summary>
            <param name="context">The context.</param>
            <param name="composer">The composer.</param>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryInstance.composeOperationEnd(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.interfaces.IMetaContentNested,imbSCI.Reporting.script.docScript)">
            <summary>
            Composes the operation end.
            </summary>
            <param name="context">The context.</param>
            <param name="composer">The composer.</param>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryInstance.collectOperationStart(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.interfaces.IMetaContentNested,imbSCI.Core.collection.PropertyCollectionDictionary)">
            <summary>
            Collects the operation start.
            </summary>
            <param name="context">The context.</param>
            <param name="composer">The composer.</param>
            <param name="dict">The dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryInstance.x_scopeAutoCreate(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Scope in
            </summary>
            <param name="newScope">The new scope.</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryInstance.x_scopeAutoSave(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            X-scopeOut
            </summary>
            <param name="oldScope">The old scope.</param>
            <exception cref="T:System.NotImplementedException">
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryInstance.unit">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryInstance.name">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryInstance.compiled">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryInstance.repo">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryInstance.renders">
             <summary>
            
             </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.deliveryUnit">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnit.setup">
            <summary>
            Setup all <see cref="T:imbSCI.Reporting.meta.delivery.deliveryUnitItem"/>s and other structural things
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnit.describe(imbSCI.Core.reporting.ILogBuilder)">
            <summary>
            Describes the unit via specified loger
            </summary>
            <param name="loger">The loger.</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnit.findDeliveryUnitItemWithTemplate(System.String)">
            <summary>
            Finds the deliveryInstance unit item with template.
            </summary>
            <param name="sourceFilepathNeedle">The source filepath needle.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnit.AppendDataFields(System.Data.PropertyCollection)">
            <summary>
            Appends its data points into new or existing property collection
            </summary>
            <param name="data">Property collection to add data into</param>
            <returns>Updated or newly created property collection</returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnit.AddItem``1(``0,System.IO.FileInfo)">
            <summary>
            Adds the item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item">The item.</param>
            <param name="sourceFile">The source file.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnit.AddThemeSupportFile(System.String,System.String,imbSCI.Data.enums.appends.appendLinkType)">
            <summary>
            Adds a theme support file.
            </summary>
            <param name="sourcePath">The source path - relative to reportTheme folder</param>
            <param name="outputPath">The output path - relative to deliveryInstance output folder</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnit.AddThemeSupportFiles(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Adds all files found in the <c>themeFolder</c> that match <c>search</c> and they were not already included
            </summary>
            <param name="themeFolder">The theme folder.</param>
            <param name="targetLinkType">Type of the target link.</param>
            <param name="outputPath">The output path.</param>
            <param name="includeSub">if set to <c>true</c> [include sub].</param>
            <param name="keepFolderStructure">if set to <c>true</c> [keep folder structure].</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnit.AddReportIncludeFiles(System.String,imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated,System.String,System.Boolean)">
            <summary>
            Adds all files matching the <c>filesearch</c> pattern, inside <c>path</c>
            </summary>
            <param name="path">The path inside <c>reportInclude</c> folder</param>
            <param name="transformator">The transformator - output item that transformes included content</param>
            <param name="filesearch">File search pattern to get the files</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnit.executePrepare">
            <summary>
            Executes the prepare procedure
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnit.blockBuilder">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnit.updateTemplates(imbSCI.Reporting.meta.delivery.deliveryInstance)">
            <summary>
            Updates the templates.
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnit.name">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnit.outputpath">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnit.scriptFlags">
            <summary>
            Determinates how script will be executed
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnit.theme">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnit.itemByLevel">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnit.outputByLevel">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnit.outputContent">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnit.includeItems">
            <summary>
            Items that should be included in header
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnit.items">
             <summary>
            
             </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.deliveryUnitItem">
            <summary>
            One element of <see cref="T:imbSCI.Reporting.meta.delivery.deliveryUnit"/>
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.documentSet.metaDocumentSet"/>
            <seealso cref="T:imbSCI.Reporting.meta.document.metaDocument"/>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.sourceFileInfo">
            <summary>
            Used just for double include check - normally its null
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.output_fileinfo">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.includeSourceFolder">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.template">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.filenameTemplate">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnitItem.getOutFilePath(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.interfaces.IMetaContentNested,System.Data.PropertyCollection,imbSCI.Core.reporting.format.reportOutputFormatName,System.IO.DirectoryInfo)">
            <summary>
            Gets the out file path using template
            </summary>
            <param name="context">The context.</param>
            <param name="content">The content.</param>
            <param name="pc">The pc.</param>
            <param name="format">The format.</param>
            <param name="dir">The dir.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.runstampRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnitItem.isExecuted(System.String,System.Boolean)">
            <summary>
            Determines whether the specified runstamp is executed.
            </summary>
            <param name="runstamp">The runstamp.</param>
            <param name="writeAsExecuted">if set to <c>true</c> [write as executed].</param>
            <returns>
              <c>true</c> if the specified runstamp is executed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.levels">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.name">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.description">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnitItem.#ctor(imbSCI.Reporting.meta.delivery.deliveryUnitItemType)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.delivery.deliveryUnitItem"/> class.
            </summary>
            <param name="__itemType">Type of the item.</param>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.outputpath">
            <summary>
            The output file path - relative to deliveryInstance output path: <see cref="!:imbSCI.Reporting.reporting.render.IRenderExecutionContext.directoryRoot"/>, may include subfolders, filename template and extension
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.sourcepath">
            <summary>
            The input file/folder path - relative to <see cref="M:System.IO.Directory.GetCurrentDirectory"/>
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.itemType">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.location">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItem.flags">
             <summary>
            
             </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.deliveryUnitItemByLinkType">
             <summary>
            
             </summary>
             <seealso cref="!:imbSCI.Cores.collection.aceEnumDictionary&lt;imbSCI.Cores.enums.appendLinkType, System.Collections.Generic.List&lt;imbSCI.Reporting.meta.delivery.IDeliveryUnitItem&gt;&gt;" />
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.deliveryUnitItemCollection">
            <summary>
            Collection of <see cref="T:imbSCI.Reporting.meta.delivery.deliveryUnitItem"/>s associated to <see cref="T:imbSCI.Reporting.meta.delivery.deliveryUnit"/> definition
            </summary>
            <seealso cref="!:System.Collections.Generic.IEnumerable&lt;imbSCI.Reporting.meta.delivery.deliveryUnitItem&gt;" />
            <seealso cref="T:imbSCI.Reporting.meta.delivery.IDeliveryUnitItem"/>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnitItemCollection.containsItemFromSourcefile(System.IO.FileInfo)">
            <summary>
            Determines whether the collection contains item with the same sourcefile path.
            </summary>
            <param name="sourceFileInfo">The source file information.</param>
            <returns>
              <c>true</c> if [contains item from sourcefile] [the specified source file information]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnitItemCollection.AddCriteria(imbSCI.Reporting.meta.delivery.metaContentTriggerOperator,imbSCI.Core.reporting.style.enums.metaModelTargetEnum,System.String,System.Type,imbSCI.Data.enums.reportElementLevel,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Adds the criteria.
            </summary>
            <param name="opera">The opera.</param>
            <param name="pathMatchRule">The path match rule.</param>
            <param name="pathCriteria">The path criteria.</param>
            <param name="metaElementTypeToMatch">The meta element type to match.</param>
            <param name="level">The level.</param>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnitItemCollection.Add(imbSCI.Reporting.meta.delivery.IDeliveryUnitItem)">
            <summary>
            Adds the units to be executed if evaluation passes
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItemCollection.trigs">
            <summary>
            assigned triggers
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitItemCollection.items">
            <summary>
            assigned units
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnitItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnitItemCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.deliveryUnitItemFlags">
            <summary>
            Execution flags
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemFlags.zippedSource">
            <summary>
            The item is contained in an archive file
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemFlags.filenameIsDataTemplate">
            <summary>
            Output filenames are data templates that should be preprocessed before used
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemFlags.filenameExtensionIsStatic">
            <summary>
            It will prevend deliveryUnit to change any predefined filename extension
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemFlags.linkToPrimaryContent">
            <summary>
            It will create proper link within primary content. i.e. for CSS file it will include style tag in head part of HTML output
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.deliveryUnitItemLocationBase">
            <summary>
            Targeted location of the unit item
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemLocationBase.unknown">
            <summary>
            The location of item is unset
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemLocationBase.localResource">
            <summary>
            The local resource - item will be saved into current scope <see cref="!:imbSCI.Reporting.reporting.render.IRenderExecutionContext.directoryScope"/>
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemLocationBase.globalDocumentResource">
            <summary>
            It is a resource shared within the current document (closest parent to the current logical scope)
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemLocationBase.globalDocumentSetResource">
            <summary>
            It is a resource shared within the document set (closest parent to the current logical scope)
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemLocationBase.globalDeliveryResource">
            <summary>
            It is a resources shared within the complete deliveryInstance output
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemLocationBase.externalWebResource">
            <summary>
            The item is actually an URI retrieved via http request
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.deliveryUnitItemType">
            <summary>
            deliveryUnitItemType -- defines one file/content action
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemType.contentTemplate">
            <summary>
            Text template with <see cref="T:imbSCI.Data.enums.fields.templateFieldSubcontent"/> and (optionally) <see cref="T:imbSCI.Data.enums.fields.templateFieldBasic"/> and other placeholders.
            </summary>
            <remarks>
            <para>Subcontent is automatically extracted into <see cref="T:System.Data.PropertyCollection"/></para>
            </remarks>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemType.content">
            <summary>
            The content - direct output node
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemType.dataTemplate">
            <summary>
            String templates with <see cref="T:imbSCI.Data.enums.fields.templateFieldBasic"/> and other placeholders.
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemType.supportFile">
            <summary>
            It is a file that should be included into deliveryInstance output
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemType.supportFolder">
            <summary>
            It is a complete folder that should be included into deli
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemType.dataSource">
            <summary>
            It is an external source of data to be included inside <see cref="!:imbSCI.Reporting.reporting.render.IRenderExecutionContext.data" /> collection for template application
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.deliveryUnitItemType.generatedOutput">
            <summary>
            The item is actually automatically generated output
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.deliveryUnitRenderCollection">
            <summary>
            Collection of renders
            </summary>
            <seealso cref="!:System.Collections.Generic.IEnumerable&lt;imbSCI.Reporting.meta.delivery.deliveryUnit&gt;" />
            <seealso cref="!:imbSCI.Reporting.reporting.render.IRender"/>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnitRenderCollection.get``1">
            <summary>
            Gets this instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.deliveryUnitRenderCollection.getTextRenders">
            <summary>
            Gets the text renders.
            </summary>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.deliveryUnitRenderCollection.items">
             <summary>
            
             </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.IDeliveryUnitItem">
             <summary>
            
             </summary>
             <seealso cref="T:imbSCI.Data.interfaces.IObjectWithNameAndDescription" />
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.items.deliveryUnitDirectoryConstructor">
             <summary>
            
             </summary>
             <seealso cref="T:imbSCI.Reporting.meta.delivery.deliveryUnitItem" />
             <seealso cref="T:imbSCI.Reporting.meta.delivery.items.IDeliveryUnitItemOutputRender" />
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated">
             <summary>
            
             </summary>
             <seealso cref="T:imbSCI.Reporting.meta.delivery.deliveryUnitItem" />
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated.sourceRender">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated.filenameSufix">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated.format">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated.saveOutput(imbSCI.Core.reporting.render.IRenderExecutionContext,System.String,System.Data.PropertyCollection,System.String,System.Boolean)">
            <summary>
            Saves the output - for external use
            </summary>
            <param name="mainContent">Content of the main.</param>
            <param name="data">The data.</param>
            <param name="filepath">The filepath.</param>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated.levelsOfNewDirectory">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated.#ctor(System.String,imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput,imbSCI.Core.reporting.format.reportOutputFormatName,System.Collections.Generic.IEnumerable{imbSCI.Data.enums.reportElementLevel})">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated" /> class.
            </summary>
            <param name="__sourcepath">The sourcepath.</param>
            <param name="__sourceRender">The source render.</param>
            <param name="__format">The format.</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated.scopeOutOperation(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Scopes the out operation.
            </summary>
            <param name="context">The context.</param>
            <param name="oldScope">The old scope.</param>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemFileOutput">
            <summary>
            Delivers content from file to specified outputpath. Applies context.data to template fields
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.delivery.deliveryUnitItem" />
            <seealso cref="T:imbSCI.Reporting.meta.delivery.IDeliveryUnitItem" />
            <seealso cref="T:imbSCI.Reporting.meta.delivery.items.IDeliveryUnitItemWithTemplate" />
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemFileOutput.output_datafield">
            <summary>
            Output template field
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemFileOutput.isDataFieldMode">
            <summary>
            Gets a value indicating whether this instance is in data field mode.
            </summary>
            <value>
            <c>true</c> if this instance is data field mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemFileOutput.templateOutput">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemFileOutput.#ctor(System.String,imbSCI.Data.enums.fields.templateFieldSubcontent,imbSCI.Reporting.meta.delivery.deliveryUnitItemLocationBase,System.String,System.String)">
            <summary>
            DataField mode: loads content file and on scopeInOperation applies context data and saves result to output field.
            </summary>
            <param name="__sourcepath">The sourcepath - relative to reportTheme directory</param>
            <param name="__outputfield">The outputfield.</param>
            <param name="__location">The location - level to be triggered</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemFileOutput.#ctor(System.String,System.String,System.String,System.String,imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated)">
            <summary>
            Content from file to be exported at output path with optional <see cref="T:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated"/> macro template
            </summary>
            <param name="__sourcepath">The sourcepath - relative to reportTheme directory</param>
            <param name="__outputPath">The output path - relative to deliveryInstance directory root. if null then it will not do file output</param>
            <param name="__templateOutput">The template output to deliver file output via its macro template (optional)</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemFileOutput.prepareOperation(imbSCI.Core.reporting.render.IRenderExecutionContext)">
            <summary>
            Prepares the operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemFileOutput.scopeInOperation(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            When scopes the in operation - applies template into context.data [if is in datafield mode]
            </summary>
            <param name="context">The context.</param>
            <param name="newScope">The new scope.</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemFileOutput.scopeOutOperation(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Scopes the out operation.
            </summary>
            <param name="context">The context.</param>
            <param name="oldScope">The old scope.</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemFileOutput.collectOperationStart(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.interfaces.IMetaContentNested,imbSCI.Core.collection.PropertyCollectionDictionary)">
            <summary>
            inserts empty data field for each composer passed
            </summary>
            <param name="context">The context.</param>
            <param name="composer">The composer.</param>
            <param name="dict">The dictionary.</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemLogOutput">
            <summary>
            Delivers <see cref="T:imbSCI.Core.interfaces.IAceLogable"/>, <see cref="!:imbSCI.Reporting.reporting.render.ITextRender"/> or <see cref="T:System.String"/> content on predefined output path
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.delivery.deliveryUnitItem" />
            <seealso cref="T:imbSCI.Reporting.meta.delivery.IDeliveryUnitItem" />
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemLogOutput.specialSource">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemLogOutput.log">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemLogOutput.logRender">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemLogOutput.logStatic">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemLogOutput.templateOutput">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemLogOutput.#ctor(imbSCI.Core.interfaces.IAceLogable,System.String,imbSCI.Reporting.meta.delivery.items.deliveryUnitItemContentTemplated)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemLogOutput"/> class.
            </summary>
            <param name="__log">The log.</param>
            <param name="__outputPath">The output path.</param>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemPaletteCSS">
             <summary>
            
             </summary>
             <seealso cref="T:imbSCI.Reporting.meta.delivery.deliveryUnitItem" />
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemPaletteCSS.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemPaletteCSS"/> class.
            </summary>
            <param name="opath">The opath.</param>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput">
            <summary>
            UnitItem for simple output creation
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.delivery.deliveryUnitItem" />
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput.outputRender">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput.format">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput.levels">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput.levelsOfNewDirectory">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput.levelOfNewFile">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput.levelOfNewPage">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput.collectOperationStart(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.interfaces.IMetaContentNested,imbSCI.Core.collection.PropertyCollectionDictionary)">
            <summary>
            Collects the operation start.
            </summary>
            <param name="context">The context.</param>
            <param name="composer">The composer.</param>
            <param name="dict">The dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput.scopeInOperation(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Scopes the in operation.
            </summary>
            <param name="context">The context.</param>
            <param name="newScope">The new scope.</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput.runComplexInstruction(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Reporting.script.docScriptInstruction)">
            <summary>
            Compiles complex appends. Returns <c>appendType</c> if it is no match for this <c>runner</c>.
            </summary>
            <param name="ins">The ins.</param>
            <remarks>OK for multimpleruns</remarks>
            <returns><c>appendType.none</c> if executed, other <c>appendType</c> if no match for this run method</returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput.runSpecialInstruction(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Reporting.script.docScriptInstruction)">
            <summary>
            Runs the special instruction.
            </summary>
            <param name="ins">The ins.</param>
            <remarks>THIS IS NOT FOR LOOP EXECUTION</remarks>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSimpleRenderOutput.executeScriptInstruction(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Reporting.script.docScriptInstructionCompiled)">
            <summary>
            Executes the script instruction.
            </summary>
            <param name="context">The context.</param>
            <param name="instruction">The instruction.</param>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSupportFile">
            <summary>
            Static file copy
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.delivery.deliveryUnitItem" />
            <seealso cref="T:imbSCI.Reporting.meta.delivery.IDeliveryUnitItem" />
            <seealso cref="T:imbSCI.Reporting.meta.delivery.items.IDeliveryUnitItemFromFileSource" />
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.items.deliveryUnitItemSupportFile.linkType">
             <summary>
            
             </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.items.IDeliverySupportFile">
            <summary>
            Support file
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.delivery.items.IDeliveryUnitItemFromFileSource" />
            <seealso cref="T:imbSCI.Reporting.meta.delivery.IDeliveryUnitItem" />
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger">
            <summary>
            Criteria to match an <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/>
            </summary>
            <remarks>
            <para>The <see cref="T:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger"/> has multiple <c>OR</c> inner criteria-tests:</para>
            <para><see cref="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.type"/>, <see cref="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.level"/>, <see cref="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.element"/>, <see cref="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.pathMatch"/>  and <see cref="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.pathMatchRule"/></para>
            <para><see cref="M:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.evaluateSelf(imbSCI.Core.interfaces.IMetaContentNested)"/> returns result of these applying <c>OR</c> - <c>||</c> logic operator, the operator is immutable.</para>
            <para><see cref="M:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.evaluate(imbSCI.Core.interfaces.IMetaContentNested,System.Boolean)"/> is method used for <see cref="T:imbSCI.Reporting.meta.delivery.metaContentCriteriaTriggerCollection"/> evaluation.</para>
            <para>Results of multiple <see cref="T:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger"/> instances within the collection are combined with associated <see cref="T:imbSCI.Reporting.meta.delivery.metaContentTriggerOperator"/> logic operators.</para>
            </remarks>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.evaluate(imbSCI.Core.interfaces.IMetaContentNested,System.Boolean)">
            <summary>
            Evaluates the specified test content.
            </summary>
            <param name="testContent">Content of the test.</param>
            <param name="defaultOrLastResult">if set to <c>true</c> [default or last result].</param>
            <returns></returns>
            <remarks>
            <para>Results of multiple <see cref="T:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger"/> instances within the collection are combined with associated <see cref="T:imbSCI.Reporting.meta.delivery.metaContentTriggerOperator"/> logic operators.</para>
            </remarks>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.evaluateSelf(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Evaluates it self - returns raw result without applying <see cref="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.triggerOperator"/>.
            </summary>
            <param name="testContent">Content of the test.</param>
            <returns>Returns <c>true</c> on first criteria matched, otherwise returns <c>false</c></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.uid">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.triggerOperator">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.pathMatchRule">
            <summary>
            After <see cref="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.pathMatch"/> retrieves a targeted <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/> it will be tested if it's inside defined <c>scope</c>
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.pathMatch">
            <summary>
            RegexExpression to match <see cref="P:imbSCI.Core.interfaces.IMetaContentNested.path"/> against (path with name)
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.type">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.level">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger.element">
             <summary>
            
             </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.metaContentCriteriaTriggerCollection">
            <summary>
            Criteriae to test <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/> against
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.metaContentCriteriaTriggerCollection.items">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.metaContentCriteriaTriggerCollection.evaluate(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Evaluates the specified test content.
            </summary>
            <param name="testContent">Content of the test.</param>
            <param name="defaultOrLastResult">if set to <c>true</c> [default or last result].</param>
            <returns></returns>
            <remarks>
            <para>Results of multiple <see cref="T:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger"/> instances within the collection are combined with associated <see cref="T:imbSCI.Reporting.meta.delivery.metaContentTriggerOperator"/> logic operators.</para>
            </remarks>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.metaContentCriteriaTriggerCollection.AddCriteria(imbSCI.Reporting.meta.delivery.metaContentTriggerOperator,imbSCI.Core.reporting.style.enums.metaModelTargetEnum,System.String,System.Type,imbSCI.Data.enums.reportElementLevel,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Adds new <see cref="T:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger"/> match rule and its operator
            </summary>
            <param name="opera">The operator: how this criteria combines with others in this collection</param>
            <param name="pathCriteria">The path with <see cref="!:imbSCI.Data.extensions.data.imbPathExtensions.getChildByPath(IObjectWithChildSelector, string)"/> and to test if it returns the same IElement  </param>
            <param name="metaElementTypeToMatch">Type that test instance must be compatibile with</param>
            <param name="level">The level of element to test against</param>
            <param name="element">The element instance to test against</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.metaContentTriggerOperator">
            <summary>
            Operator - the way <see cref="T:imbSCI.Reporting.meta.delivery.metaContentCriteriaTrigger"/> is evaluated together with other criterias within <see cref="T:imbSCI.Reporting.meta.delivery.metaContentCriteriaTriggerCollection"/>
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.metaContentTriggerOperator.ignore">
            <summary>
            This <c>trigger</c> will not affect evaluation
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.metaContentTriggerOperator.master">
            <summary>
            This <c>trigger</c> alone will match if it is happy
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.metaContentTriggerOperator.exclude">
            <summary>
            This <c>trigger</c> musn't be happy
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.metaContentTriggerOperator.mustHave">
            <summary>
            This <c>trigger</c> must be happy to allow match
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.delivery.metaContentTriggerOperator.mayHave">
            <summary>
            This <c>trigger</c> will match if happy, if not happy others may decide
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.services.templateBlocksForHtml">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.services.templateBlocksForHtml.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.delivery.services.templateBlocksForHtml"/> class.
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.services.templateBlocksForHtml.outputRender">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.services.templateBlocksForHtml.BuildIncludeTemplate(imbSCI.Reporting.meta.delivery.deliveryInstance,System.Data.PropertyCollection)">
            <summary>
            Builds the include template.
            </summary>
            <param name="unit">The unit.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.units.deliveryUnitBootmarkReport">
            <summary>
            Report using Bootmark library
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.delivery.deliveryUnit" />
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.units.deliveryUnitBuilder">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.units.deliveryUnitBuilder.prepareOperationFileSource(imbSCI.Reporting.meta.delivery.items.IDeliveryUnitItemFromFileSource,imbSCI.Core.reporting.render.IRenderExecutionContext)">
            <summary>
            Prepares the operation file source.
            </summary>
            <param name="context">The context.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.units.deliveryUnitBuilder.loadFileAndSaveTemplate(imbSCI.Reporting.meta.delivery.items.IDeliveryUnitItemFromFileSource,imbSCI.Core.reporting.render.IRenderExecutionContext)">
            <summary>
            Loads the template, applies <see cref="!:imbSCI.Reporting.reporting.render.IRenderExecutionContext.data"/> and saves into output path
            </summary>
            <param name="item">The item.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.units.deliveryUnitBuilder.AddStandardHtmlItems(imbSCI.Reporting.meta.delivery.deliveryUnit)">
            <summary>
            Adds a set of <see cref="T:imbSCI.Reporting.meta.delivery.deliveryUnitItem"/>s for the standard HTML report
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.units.deliveryUnitBuilder.themepath">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.delivery.units.deliveryUnitBuilder.includepath">
             <summary>
            
             </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.units.deliveryUnitCompactHelp">
            <summary>
            Delivery unit for compact report
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.delivery.deliveryUnit" />
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.units.deliveryUnitCompactHelp.setup">
            <summary>
            Setups the specified folder: output folder
            </summary>
            <param name="folder">The folder.</param>
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.units.deliveryUnitCompactReport">
            <summary>
            Delivery unit for compact report
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.delivery.deliveryUnit" />
        </member>
        <member name="T:imbSCI.Reporting.meta.delivery.units.deliveryUnitMainReport">
             <summary>
            
             </summary>
             <seealso cref="T:imbSCI.Reporting.meta.delivery.deliveryUnit" />
        </member>
        <member name="M:imbSCI.Reporting.meta.delivery.units.deliveryUnitMainReport.setup">
            <summary>
            Setups this instance.
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.documentSet.metaDocumentRootSet">
            <summary>
            Root set of the report - adds index.html outside its own folder
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.documentSet.metaDocumentSet" />
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.metaDocumentRootSet.regPathGet``1(System.String)">
            <summary>
            Regs the path get.
            </summary>
            <typeparam name="TReg">The type of the reg.</typeparam>
            <param name="__path">The path in format $$$reportElementLevel:\\analyticReport  .</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.metaDocumentRootSet.regPathGet(System.String,imbSCI.Data.enums.reportElementLevel)">
            <summary>
            Regs the path get.
            </summary>
            <param name="__path">The path.</param>
            <param name="level">The level.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.metaDocumentRootSet.regPath(imbSCI.Core.interfaces.IMetaContentNested,System.Boolean)">
            <summary>
            Regs the path.
            </summary>
            <param name="metaItem">The meta item.</param>
            <param name="theParentRegMoment">if set to <c>true</c> [the parent reg moment].</param>
            <exception cref="!:aceReportException">
            null - null - regPath issue
            or
            null - null - regPath issue
            </exception>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentRootSet.regPathCache">
            <summary>
            Gets or sets the reg path cache.
            </summary>
            <value>
            The reg path cache.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentRootSet.pathStrCache">
            <summary>
            Gets or sets the path string cache.
            </summary>
            <value>
            The path string cache.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentRootSet.pathCache">
            <summary>
            Gets or sets the path cache.
            </summary>
            <value>
            The path cache.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentRootSet.pageRootIndex">
            <summary>
            Gets or sets the index of the page root.
            </summary>
            <value>
            The index of the page root.
            </value>
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.metaDocumentRootSet.compose(imbSCI.Reporting.script.docScript)">
            <summary>
            The compose call with root index inclusion out of report folder
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.metaDocumentRootSet.collect(imbSCI.Core.collection.PropertyCollectionDictionary)">
            <summary>
            Collects data trough this meta node and its children
            </summary>
            <param name="data">PropertyCollectionDictionary to fill in</param>
            <returns>
            New or updated Dictionary
            </returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.documentSet.metaDocumentSet">
            <summary>
            Root reporting object - supports multiply documents and hierarchy
            UPDATE: Now not :) <see cref="T:imbSCI.Reporting.meta.documentSet.metaDocumentRootSet"/>
            </summary>
            <remarks>
            <para>Meta model is universal data and structure model for imbVeles reporting</para>
            <para>It supports multi format and structure exporting via metaExporters namespace</para>
            <list type="table">
            <listheader>Meta reporting model structure</listheader>
            <item>
                <term>metaDocumentSet (one test run)</term>
                <description>Master object - represents one complete multi document report.</description>
            </item>
            <item>
                <term>metaDocument (one item/iteration of test run or aluxuary documents)</term>
                <description>Document contains pages and common settings between them</description>
            </item>
            <item>
                <term>metaPage (list of content presenters and data)</term>
                <description>Page may contain different IMetaContent objects.</description>
            </item>
            <item>
                <term>metaContent (instance of IMetaContent)</term>
                <description>Content may be: set of links, menu, data table representation, images etc</description>
            </item>
            </list>
            </remarks>
            \ingroup_disabled docCore
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentSet.index">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentSet.menu_documentSetMenu">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentSet.notation">
            <summary>
            Extra notation data
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.metaDocumentSet.compose(imbSCI.Reporting.script.docScript)">
            <summary>
            Composes the specified script.
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.metaDocumentSet.baseCompose(imbSCI.Reporting.script.docScript)">
            <summary>
            Bases the compose.
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.metaDocumentSet.collect(imbSCI.Core.collection.PropertyCollectionDictionary)">
            <summary>
            Collects data trough this meta node and its children
            </summary>
            <param name="data">PropertyCollectionDictionary to fill in</param>
            <returns>
            New or updated Dictionary
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.metaDocumentSet.construct(System.Object[])">
            <summary>
            Constructs the specified resources.
            </summary>
            <param name="resources"></param>
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.metaDocumentSet.baseConstruct(System.Object[])">
            <summary>
            Bases the construct.
            </summary>
            <param name="resources"></param>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentSet.documentSetTitle">
            <summary>
            Title describing complete documentSet
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentSet.documentSetDescription">
            <summary>
            Short description of complete documentSet
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentSet.documentSets">
            <summary>
            Sub document sets
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentSet.Item(System.String)">
            <summary>
            Gets the <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentSet.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentSet.documents">
            <summary>
            Collection of metaDocuments inside the set
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.documentSet.metaDocumentSet.pages">
            <summary>
            Registry of service pages used by this document
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.metaDocumentSet.indexOf(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Returns position of child inside primary collection. If fails returns -1
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.metaDocumentSet.sortChildren">
            <summary>
            Sorts all sub collections
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.documentSet.setPresetDatabaseDump">
            <summary>
            Complete knowledge base dump
            </summary>
            \ingroup_disabled docDocumentSet
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.setPresetDatabaseDump.construct(System.Object[])">
            <summary>
            Constructs the specified resources.
            </summary>
            <param name="resources"></param>
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.setPresetDatabaseDump.addDbTableReportPage(System.Data.DataTable)">
            <summary>
            Adds the database table report page, automatically creates database document and overview page
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="T:imbSCI.Reporting.meta.documentSet.setPresetResearchReport">
            <summary>
            Complete report on scientific test
            </summary>
            <remarks>
                <list type="bullet">
                    <listheader>Report contains</listheader>
                    <item>Sampled collection report</item>
                    <item>Test workflow info</item>
                    <item>Used resources</item>
                </list>
            </remarks>
            \ingroup_disabled docDocumentSet
        </member>
        <member name="M:imbSCI.Reporting.meta.documentSet.setPresetResearchReport.#ctor">
            <summary>
            Parameterless constructor
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.document.documentDatabaseReport">
            <summary>
            2017: Report based on DataTable collection and descriptive metaBundle object
            </summary>
            \ingroup_disabled docDocument
        </member>
        <member name="P:imbSCI.Reporting.meta.document.documentDatabaseReport.overview">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.document.documentDatabaseReport.#ctor(System.Data.PropertyCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.document.documentDatabaseReport"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.documentDatabaseReport.tables">
             <summary>
            
             </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.document.metaDocument">
            <summary>
            One page inside metaDocument. It may represent one file or multiple files nested in folder
            </summary>
            <remarks>
            Document may have its service pages> indexPage, readmePage,
            </remarks>
            \ingroup_disabled docDocument
            \ingroup_disabled docCore
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.index">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.menu_documentmenu">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.description">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.document.metaDocument.collect(imbSCI.Core.collection.PropertyCollectionDictionary)">
            <summary>
            Collects data trough this meta node and its children
            </summary>
            <param name="data">PropertyCollectionDictionary to fill in</param>
            <returns>
            New or updated Dictionary
            </returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.form">
            <summary>
            filesystem form of document
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.document.metaDocument.construct(System.Object[])">
            <summary>
            Constructs the specified resources.
            </summary>
            <param name="resources"></param>
        </member>
        <member name="M:imbSCI.Reporting.meta.document.metaDocument.baseConstruct(System.Object[])">
            <summary>
            Basic <c>construct</c> procedure - takes <c>theme</c>
            </summary>
            <param name="resources">The resources.</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.document.metaDocument.compose(imbSCI.Reporting.script.docScript)">
            <summary>
            Composes the specified script.
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.document.metaDocument.baseCompose(imbSCI.Reporting.script.docScript)">
            <summary>
            Bases the compose.
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.Item(System.String)">
            <summary>
            Gets the <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.documentBottomLine">
            <summary>
            Last line in footer
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.documentDescription">
            <summary>
            Description of the document
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.documentTitle">
            <summary>
            Display title for document
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.theme">
            <summary>
            reference to styleTheme - meant to be used by others via <c>document</c> reference
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.scripts">
            <summary>
            Scripts to be included in DocumentSet _scripts folder
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.styles">
            <summary>
            Styles to be included in DocumentSet _styles folder
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.pages">
            <summary>
            Collection of metaPages
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.footer">
            <summary>
            Footer meta container
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.document.metaDocument.header">
            <summary>
            Header meta container
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.domain.metaDataTableCollection">
            <summary>
            Collection of multiple tables to render into one page
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.domain.metaReference">
            <summary>
            Citation reference
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.IImetaCollection.Sort">
            <summary>
            Deploy
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.IImetaCollection.discoverCommonParent(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Discovers the common parent or sets the one provided in arguments
            </summary>
            <param name="__parent">The parent.</param>
            <returns></returns>
            <exception cref="!:aceReportException">Can't discover the parent when the collection is empty!! - null - discoverCommonParent exception</exception>
        </member>
        <member name="M:imbSCI.Reporting.meta.IImetaCollection.Add(imbSCI.Core.interfaces.IMetaContentNested,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Method to register new page in collection - you must get new instance from parent object
            </summary>
            <param name="newChild"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.IImetaCollection.setParentToItems(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Set parent
            </summary>
            <param name="__parent">The parent.</param>
        </member>
        <member name="P:imbSCI.Reporting.meta.ImetaCollection`1.Item(System.String)">
            <summary>
            Gets the <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.metaCollection`1">
            <summary>
            Base class for all collections inside META structure
            </summary>
            <typeparam name="T"></typeparam>
            \ingroup_disabled docElementCore
        </member>
        <member name="F:imbSCI.Reporting.meta.metaCollection`1._items">
            <summary>
            The items
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.metaCollection`1.items">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.metaCollection`1.Item(System.String)">
            <summary>
            Gets the <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="F:imbSCI.Reporting.meta.metaCollection`1.nameSearchIterationLimit">
            <summary>
            The name search iteration limit
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaCollection`1.makeItemUniqueName(System.String)">
            <summary>
            Creates unique name for member
            </summary>
            <param name="nameProposal"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaCollection`1.Sort">
            <summary>
            Deploy
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaCollection`1.compare(`0,`0)">
            <summary>
            Comparing priority of items
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.metaCollection`1.parent">
            <summary>Reference to common parent</summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaCollection`1.discoverCommonParent(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Discovers the common parent or sets the one provided in arguments
            </summary>
            <param name="__parent">The parent.</param>
            <returns></returns>
            <exception cref="T:imbSCI.Reporting.exceptions.aceReportException">Can't discover the parent when the collection is empty!! - null - discoverCommonParent exception</exception>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaCollection`1.Add(imbSCI.Core.interfaces.IMetaContentNested,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Method to register new page in collection - you must get new instance from parent object
            </summary>
            <param name="newChild"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaCollection`1.setParentToItems(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Set parent
            </summary>
            <param name="__parent">The parent.</param>
        </member>
        <member name="T:imbSCI.Reporting.meta.metaTools">
             <summary>
            
             </summary>
             \ingroup_disabled docElementCore
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.testScope(imbSCI.Data.interfaces.IObjectWithPathAndChildSelector,imbSCI.Data.interfaces.IObjectWithPathAndChildSelector,imbSCI.Core.reporting.style.enums.metaModelTargetEnum)">
             <summary>
             Tests <c>test</c> vs <c>currentScope</c> relationship
             </summary>
             <param name="currentScope">The current scope.</param>
             <param name="test">The test.</param>
             <param name="testScope">The test scope.</param>
             <returns></returns>
             <remarks>
             <para>Target enums supported:</para>
             Same element
             <see cref = "F:imbSCI.Core.reporting.style.enums.metaModelTargetEnum.scope" />
             <c>test</c> is direct child of <c>currentScope</c>
             <see cref="F:imbSCI.Core.reporting.style.enums.metaModelTargetEnum.scopeChild"/>
             <c>test</c> is child at any level of <c>currentScope</c>
             <see cref="F:imbSCI.Core.reporting.style.enums.metaModelTargetEnum.scopeEachChild"/>
             <c>test</c> is parent at any level of <c>currentScope</c>
             <see cref="F:imbSCI.Core.reporting.style.enums.metaModelTargetEnum.scopeParent"/>
             <c>test</c> is not null
             <see cref="F:imbSCI.Core.reporting.style.enums.metaModelTargetEnum.scopeRelativePath"/>
            
             For any other <see cref="T:imbSCI.Core.reporting.style.enums.metaModelTargetEnum"/> value it will return <c>false</c>, except for <see cref="F:imbSCI.Core.reporting.style.enums.metaModelTargetEnum.none"/> returns <c>true</c>
             </remarks>
             <seealso cref="F:imbSCI.Core.reporting.style.enums.metaModelTargetEnum.scope"/>
             <seealso cref="F:imbSCI.Core.reporting.style.enums.metaModelTargetEnum.scopeChild"/>
             <seealso cref="F:imbSCI.Core.reporting.style.enums.metaModelTargetEnum.scopeEachChild"/>
             <seealso cref="F:imbSCI.Core.reporting.style.enums.metaModelTargetEnum.scopeParent"/>
             <seealso cref="F:imbSCI.Core.reporting.style.enums.metaModelTargetEnum.scopeRelativePath"/>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.RenderSetAsDropDowns(imbSCI.Reporting.links.reportLinkCollectionSet,imbSCI.Core.reporting.render.converters.converterBase)">
            <summary>
            Renders the set as drop downs.
            </summary>
            <param name="menu">The menu.</param>
            <param name="converter">The converter.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.RenderAsDropdown(imbSCI.Reporting.links.reportLinkCollection,imbSCI.Core.reporting.render.converters.converterBase)">
            <summary>
            Renders as dropdown.
            </summary>
            <param name="menu">The menu.</param>
            <param name="converter">The converter.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.RenderAsToolbar(imbSCI.Reporting.links.reportLinkCollection,imbSCI.Core.reporting.render.converters.converterBase,imbSCI.Core.reporting.render.converters.bootstrap_size)">
            <summary>
            Renders as dropdown.
            </summary>
            <param name="menu">The menu.</param>
            <param name="converter">The converter.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.ConvertToBootstrapColor(imbSCI.Core.enums.dataPointImportance)">
            <summary>
            Converts the color of to bootstrap.
            </summary>
            <param name="importance">The importance.</param>
            <returns></returns>
        </member>
        <member name="F:imbSCI.Reporting.meta.metaTools.linkInTemplate">
            <summary>
            The link in template
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.GetLink(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Creates link in proper format for template
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="F:imbSCI.Reporting.meta.metaTools.ELEMENTPATH_PATH">
            <summary>
            The elementpath path
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.metaTools.ELEMENTPATH_ELEMENT">
            <summary>
            The elementpath element
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.metaTools.ELEMENTPATH_SIMPLEPATH">
            <summary>
            The elementpath simplepath
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.GetConvertedToLevel(System.String)">
            <summary>
            Converts the specified level string.
            </summary>
            <param name="levelString">The level string.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.GetReportElementPathAndLevel(System.String,System.String@)">
            <summary>
            Gets the report element level.
            </summary>
            <param name="elementPath">The element path.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.CompileLinksInTemplate(System.String,imbSCI.Reporting.meta.delivery.deliveryInstance,imbSCI.Core.reporting.format.reportOutputFormatName,System.Collections.Generic.List{imbSCI.Data.enums.reportElementLevel})">
            <summary>
            Compiles the links in the template.
            </summary>
            <param name="template">The template.</param>
            <param name="context">The context.</param>
            <param name="format">The format.</param>
            <param name="levels">The levels.</param>
            <returns></returns>
            <exception cref="T:imbSCI.Reporting.exceptions.aceReportException">null</exception>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.CompileTable(System.Data.DataTable,imbSCI.Reporting.meta.delivery.deliveryInstance,imbSCI.Core.reporting.format.reportOutputFormatName,System.Collections.Generic.List{imbSCI.Data.enums.reportElementLevel})">
            <summary>
            Compiles the links and template elements in the data table, creates duplicate for output, original is not changed
            </summary>
            <param name="table">The table.</param>
            <param name="context">The context.</param>
            <param name="format">The format.</param>
            <param name="levels">The levels.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.CompileLinkForElemenet(imbSCI.Core.interfaces.IMetaContentNested,imbSCI.Reporting.meta.delivery.deliveryInstance,imbSCI.Core.reporting.format.reportOutputFormatName,System.Collections.Generic.List{imbSCI.Data.enums.reportElementLevel})">
            <summary>
            Compiles the link for elemenet
            </summary>
            <param name="element">The element.</param>
            <param name="context">The context.</param>
            <param name="format">The format.</param>
            <param name="levels">The levels.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.CompileLinkCollection(imbSCI.Reporting.links.reportLinkCollection,imbSCI.Reporting.meta.delivery.deliveryInstance,imbSCI.Core.reporting.format.reportOutputFormatName,System.Collections.Generic.List{imbSCI.Data.enums.reportElementLevel})">
            <summary>
            Creates collection of links with correct url paths
            </summary>
            <param name="menu">The menu.</param>
            <param name="context">The context.</param>
            <param name="format">The format.</param>
            <param name="levels">The levels.</param>
            <returns></returns>
            <exception cref="T:imbSCI.Reporting.exceptions.aceReportException">CompileLinkCollection - found link with undefined state</exception>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.GetLinkCollection(imbSCI.Reporting.meta.document.metaDocument,imbSCI.Reporting.meta.delivery.deliveryInstance,imbSCI.Core.reporting.format.reportOutputFormatName,System.Collections.Generic.List{imbSCI.Data.enums.reportElementLevel},System.Boolean)">
            <summary>
            Gets the link collection.
            </summary>
            <param name="scoped">The scoped.</param>
            <param name="context">The context.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.GetServicePageLinkCollection(imbSCI.Reporting.meta.documentSet.metaDocumentSet,imbSCI.Reporting.meta.delivery.deliveryInstance,imbSCI.Core.reporting.format.reportOutputFormatName,System.Collections.Generic.List{imbSCI.Data.enums.reportElementLevel},System.Boolean)">
            <summary>
            Gets the service page link collection.
            </summary>
            <param name="scoped">The scoped.</param>
            <param name="context">The context.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.GetDocumentSetsLinkCollection(imbSCI.Reporting.meta.documentSet.metaDocumentSet,imbSCI.Reporting.meta.delivery.deliveryInstance,imbSCI.Core.reporting.format.reportOutputFormatName,System.Collections.Generic.List{imbSCI.Data.enums.reportElementLevel},System.Boolean)">
            <summary>
            Gets the service page link collection.
            </summary>
            <param name="scoped">The scoped.</param>
            <param name="context">The context.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.GetLinkCollection(imbSCI.Core.interfaces.IMetaContentNested,imbSCI.Reporting.meta.delivery.deliveryInstance,imbSCI.Core.reporting.format.reportOutputFormatName,System.Collections.Generic.List{imbSCI.Data.enums.reportElementLevel},System.Boolean)">
            <summary>
            Gets the link collection
            </summary>
            <param name="scoped">The scoped.</param>
            <param name="context">The context.</param>
            <param name="format">The format.</param>
            <param name="levels">The levels.</param>
            <param name="makeAppApsolut">if set to <c>true</c> [make application apsolut].</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.GetElementLevel(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Gets the element level.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.GetElementLevel(System.Type)">
            <summary>
            Gets the element level.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.GetDirectoryPath(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.interfaces.IMetaContentNested,System.Collections.Generic.List{imbSCI.Data.enums.reportElementLevel},System.Boolean)">
            <summary>
            Gets the directory path.
            </summary>
            <param name="context">The context.</param>
            <param name="scoped">The scoped.</param>
            <param name="levels">What levels of element are able to create new folder</param>
            <param name="makeAppApsolut">if set TRUE it will make path including absolute path to application runtime </param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.subConstruct(imbSCI.Core.interfaces.IMetaContentNested,System.Object[])">
            <summary>
            Runs <c>construct</c> on all subitems from primary collection
            </summary>
            <param name="parent">The parent.</param>
            <param name="resources"></param>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.subCompose(imbSCI.Core.interfaces.IMetaContentNested,imbSCI.Reporting.script.docScript)">
            <summary>
            Run <c>compose(script)</c> on all subitems from primary collection
            </summary>
            <param name="parent">The parent.</param>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.metaTools.checkScript(imbSCI.Core.interfaces.IMetaContentNested,imbSCI.Reporting.script.docScript)">
            <summary>
            Checks if the script is the script is initiated - if not it will create new one with name of parent
            </summary>
            <param name="creator">The creator.</param>
            <param name="script">The script.</param>
            <returns>Existing or newly created script</returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.NamespaceDoc">
            <summary>
            META structure is abstract DATA representation of report: content and relationship between parts of it.
            </summary>
            <remarks>
            <para>Logical hierarchy of a META structure</para>
            <list type="bullet">
                <listheader>Structure</listheader>
                <item>
                    <term>metaDocumentSet</term>
                    <description>The main container for single test report. It is related to one science test run, has unique test run stamp.</description>
                </item>
                <item>
                    <term>metaDocument</term>
                    <description>Describes an output unit (html, pdf, md, xlsx) - it containes pages that may result in separate subfolder (html, md) files or may be as part of it (psf, xlsx) depending on settings and output format.</description>
                </item>
                <item>
                    <term>metaDocumentPage</term>
                    <description>
                        <para>Containes subpages and/or content blocks</para>
                    Describes one output onit for particular data source. It may be separate file or part of <c>metaDocument</c>. In web crawler scenario: describes one particular part of the process</description>
                </item>
                <item>
                    <term>MetaContentNestedBase classes : IMetaContent</term>
                    <description>Content blocks that describe structure of content and hold particular information to be shown.</description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="P:imbSCI.Reporting.meta.package.supportPackage.foldername">
            <summary> </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.page.metaCustomizedExternalContentPage">
             <summary>
            
             </summary>
             <seealso cref="T:imbSCI.Reporting.meta.page.metaCustomizedSimplePage" />
             <seealso cref="T:imbSCI.Reporting.interfaces.IMetaComposeAndConstruct" />
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaCustomizedExternalContentPage.introContentPath">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaCustomizedExternalContentPage.outroContentPath">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaCustomizedIntroPage.introContentPath">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaCustomizedIntroPage.outroContentPath">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaCustomizedIntroPage.compose(imbSCI.Reporting.script.docScript)">
            <summary>
            Composes the specified script.
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.page.metaCustomizedSimplePage">
            <summary>
            Page with customized content blocks
            </summary>
            <seealso cref="T:imbSCI.Reporting.meta.page.metaPage" />
            <seealso cref="T:imbSCI.Reporting.interfaces.IMetaComposeAndConstruct" />
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaCustomizedSimplePage.mainBlock">
            <summary> </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaCustomizedSimplePage.AddExternalContent(System.String,System.String,System.String)">
            <summary>
            Imports external markdown file into the page
            </summary>
            <remarks>
            Filepath starts with application running directory
            </remarks>
            <example>
            <code>
            AddExternalContent("reportInclude\\testdocs\\reportintro.md", "", "").priority = 20;
            </code>
            </example>
            <param name="filename">The filename.</param>
            <param name="title">The title.</param>
            <param name="undertitle">The undertitle.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaCustomizedSimplePage.AddAttachment(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Adds the attachment.
            </summary>
            <param name="__includeFilePath">The include file path.</param>
            <param name="__filename">The filename.</param>
            <param name="__caption">The caption.</param>
            <param name="__description">The description.</param>
            <param name="__templateNeedle">The template needle.</param>
            <param name="__isDataTemplate">if set to <c>true</c> [is data template].</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaCustomizedSimplePage.AddDataTemplate(System.Type,System.String,System.String)">
            <summary>
            Creates datatemplate for all Enum type members
            </summary>
            <param name="enumType">Type of an Enum to use as shemata</param>
            <param name="title">The title.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaCustomizedSimplePage.AddScriptBlock">
            <summary>
            Adds and returns customizable subscript block
            </summary>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaCustomizedSimplePage.AddBlock(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds another block
            </summary>
            <param name="title">The title.</param>
            <param name="description">The description.</param>
            <param name="lines">The lines.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaCustomizedSimplePage.AddIndexSkipThis(imbSCI.Reporting.meta.document.metaDocument,imbSCI.Reporting.meta.page.metaPage,System.String,imbSCI.Reporting.meta.blocks.metaDocScriptBlock)">
            <summary>
            Adds the index skip this.
            </summary>
            <param name="indexSource">The index source.</param>
            <param name="skipThis">The skip this.</param>
            <param name="output">The output.</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.page.metaDataTablePage">
            <summary>
            One table in the report
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaDataTablePage.tableData">
            <summary>
            refernce to DataTable source
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaDataTablePage.tableMetaData">
            <summary>
            reference to extra data about DataTable
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaDataTablePage.setup(System.Data.DataTable)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.page.metaDataTablePage"/> class.
            </summary>
            <param name="__data">The data.</param>
            <param name="displayTitle">The display title.</param>
            <param name="__description">The description.</param>
            <param name="__bottomLine">The bottom line.</param>
            <param name="__keywords">The keywords.</param>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaDataTablePage.keywords">
            <summary>
            custom meta kewords
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaDataTablePage.footer">
            <summary>
            custom meta footer
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaDataTablePage.header">
            <summary>
            custom meta header container
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaLogBuilderOutputPage.logBuilder">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaLogBuilderOutputPage.instanceID">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaLogBuilderOutputPage.compose(imbSCI.Reporting.script.docScript)">
            <summary>
            Composes the specified script.
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.page.metaPage">
            <summary>
            META page structure -- containes multiple IMetaContent objects, suports templates and rendering
            </summary>
             \ingroup_disabled docPage
              \ingroup_disabled docCore
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.menu_pagemenu">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.toolbar_pagetools">
            <summary> </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaPage.collect(imbSCI.Core.collection.PropertyCollectionDictionary)">
            <summary>
            Collects data trough this meta node and its children
            </summary>
            <param name="data">PropertyCollectionDictionary to fill in</param>
            <returns>
            New or updated Dictionary
            </returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.settings">
            <summary>
            Formating and layout settings of this page
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.pageTitle">
            <summary>
            Header title content for this page
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.pageDescription">
            <summary>
            page description
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.basicBlocksFlags">
            <summary>
            Description of $property$
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaPage.construct(System.Object[])">
            <summary>
            Constructs the specified resources.
            </summary>
            <param name="resources"></param>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the specified name.
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:imbSCI.Core.interfaces.IMetaContentNested"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaPage.indexOf(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Returns position of child inside primary collection. If fails returns -1
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaPage.Count">
            <summary>
            Returns number of children in primary collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaPage.sortChildren">
            <summary>
            Sorts all sub collections
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.blocks">
            <summary>
            blocks inside this page
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.attachments">
            <summary>
            Attachments to be included in DocumentSet _attachments
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.navigation">
            <summary>
            Top navigation links
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.keywords">
            <summary>
            Keywords for the document
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.footer">
            <summary>
            Footer meta container
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPage.header">
            <summary>
            Header meta container
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.page.metaPageCommonBlockFlags.pageHeadIncludes">
            <summary>
            It will autocreate head meta include metaBlock
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPalettePage.baseColor">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaPalettePage.palette">
            <summary> </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.page.metaServicePage">
            <summary>
            Service Pages are lateral document outputs used for: readme.md, readme.html, index.html, theme.css, theme.js ...
            </summary>
            <remarks>
            Service pages are one-page-document with stand alone Style
            </remarks>
            \ingroup_disabled docCore
            \ingroup_disabled docPage
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaServicePage.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.page.metaServicePage"/>
            </summary>
            <param name="__description">Mapped to both: description of this page and as extra content of <c>header</c></param>
            <param name="__title">Display title that is mapped to <c>header.name</c></param>
            <param name="__name">Path-safe name to be set to this page. Leave empty to keep default name</param>
            <param name="__priority">The position preference of the page</param>
        </member>
        <member name="M:imbSCI.Reporting.meta.page.metaServicePage.#ctor(System.String,System.String,System.String,imbSCI.Reporting.meta.page.metaServicePagePosition)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.page.metaServicePage"/>
            </summary>
            <param name="__description">Mapped to both: description of this page and as extra content of <c>header</c></param>
            <param name="__title">Display title that is mapped to <c>header.name</c></param>
            <param name="__name">Path-safe name to be set to this page. Leave empty to keep default name</param>
            <param name="__position">The position preference of the page</param>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaServicePage.position">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaServicePage.filenameBase">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.metaServicePage.fileformat">
            <summary>
            Service page fileformat - it is used to override render settings
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.page.metaServicePagePosition">
            <summary>
            Semantic definition of prefered position of element
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.page.serviceDocScriptLog.log">
             <summary>
            
             </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.links.footnote">
            <summary>
            Quoted science source or other textual source
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.links.footnoteCollection">
            <summary>
            Collection of footnotes that may be quoted somewhere
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.links.linksDevReference">
            <summary>
            List of reference manuals
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.presets.links.linksDevReference.topic">
            <summary>
            what development domain is this
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.links.linksDevReferenceDomain">
            <summary>
            DevReferenceDomain - categories of development help
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.presets.links.linksDevReferenceDomain.standard">
            <summary>
            General .NET development
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.presets.links.linksDevReferenceDomain.semantic">
            <summary>
            Semantic technologies and APIs
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.presets.links.linksDevReferenceDomain.nlp">
            <summary>
            Natural Language Processing
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.presets.links.linksDevReferenceDomain.reporting">
            <summary>
            Report generation
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.presets.links.linksDevReferenceDomain.xml">
            <summary>
            XML and XPath
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.presets.links.linksDevReferenceDomain.web">
            <summary>
            web technologies: php, mysql, html, css, java
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.links.linksIndexNavigation">
            <summary>
            Dynamic collection of links for index pages
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.links.linksNavigation">
            <summary>
            Dynamic collection of links to document, root, other pages, next/prev
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.presets.links.linksNavigation.rebuild(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Rebuilds navigation items -- this should be run before rendering the content
            </summary>
            <param name="__parent"></param>
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.links.linksSciReference">
            <summary>
            Links to quoted sci sources
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.links.linksSciReferenceDomain">
            <summary>
            Categories of Scientific references
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.presets.links.linksSciReferenceDomain.applied">
            <summary>
            The articles partially or completly applied into imbVeles
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.presets.links.linksSciReferenceDomain.citation">
            <summary>
            The articles referenced in my articles/thesis
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.presets.links.linksSciReferenceDomain.related">
            <summary>
            Not direclty referenced but related topics
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.presets.links.linksSciReferenceDomain.introductive">
            <summary>
            Overview and summary articles about relevant fields
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.pages.pagePresetCustomContent">
            <summary>
            Page with custom HTML/XML/TEXT/EXCEL format
            </summary>
            \ingroup_disabled docPage
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.servicepages.pagePresetDataTableReportOverview">
            <summary>
            Overview page for DataTableReport overview -- it uses path mechanism to reach page
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.presets.servicepages.pagePresetDataTableReportOverview.dataset">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.presets.servicepages.pagePresetDataTableReportOverview.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.presets.servicepages.pagePresetDataTableReportOverview"/> class.
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.servicepages.pagePresetGeneralReadme">
            <summary>
            META structure with general readme.md diagnostic output
            </summary>
            \ingroup_disabled docServicePage
        </member>
        <member name="M:imbSCI.Reporting.meta.presets.servicepages.pagePresetGeneralReadme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.meta.presets.servicepages.pagePresetGeneralReadme"/> class.
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.servicepages.pagePresetTableReport">
            <summary>
            PREVAZIDJENO Overview page for imbDataReportDocument.
            </summary>
            <remarks>
            Containes short information on each DataTable page inside the collection
            </remarks>
            <seealso cref="T:imbSCI.Reporting.meta.page.metaServicePage" />
        </member>
        <member name="P:imbSCI.Reporting.meta.presets.servicepages.pagePresetTableReport.table">
            <summary>
            reference to data table to display
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.servicepages.pagePresetTestItemIndex">
            <summary>
            Page with report for test item (i.e. web site)
            </summary>
            \ingroup_disabled docServicePage
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.servicepages.pagePresetTestItemReadme">
            <summary>
            Readme file for one research sample item (i.e. for webSiteProfile www.koplas.co.rs)
            </summary>
            \ingroup_disabled docServicePage
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.servicepages.pagePresetTestItemSubitemsReadme">
            <summary>
            Report on sub items - testing web site sub pages
            </summary>
            \ingroup_disabled docServicePage
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.servicepages.pagePresetTestReadme">
            <summary>
            Readme file for one research sample item (i.e. for webSiteProfile www.koplas.co.rs)
            </summary>
            \ingroup_disabled docServicePage
        </member>
        <member name="T:imbSCI.Reporting.meta.presets.servicepages.pagePresetTestSubItemIndex">
            <summary>
            Page with report for test sub item (i.e. inner web page)
            </summary>
            \ingroup_disabled docServicePage
        </member>
        <member name="T:imbSCI.Reporting.meta.render.composerOutput">
            <summary>
            Formats to export report into
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerOutput.text">
            <summary>
            Plain text format using renderText renderer
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerOutput.markdown">
            <summary>
            Markdown format using renterMarkdown renderer
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerOutput.markdownHtml">
            <summary>
            HTML format via Markdown using Markdig HTML rendering
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerOutput.imbVelesHtml">
            <summary>
            Direct render of HTML
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerOutput.imbVelesCSS">
            <summary>
            Dynamic CSS from template and/or external file
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerOutput.imbVelesJS">
            <summary>
            Dynamic javascript from template and with data points
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerOutput.markdownPdf">
            <summary>
            HTML format via Markdown using Markdig HTML rendering, then HTML to PDF export
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerOutput.excel">
            <summary>
            Excel direct formating via renderer
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerOutput.excelTablesNested">
            <summary>
            Excel exporter via EPPlus - for tabular export. Multiple dataTables are exported into one file
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerOutput.excelTablesSeparated">
            <summary>
            Excel exporter via EPPlus - separate file in sub folder per each DataTable
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.render.composerPostTask">
            <summary>
            Postprocessing tasks
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerPostTask.exportSystemLog">
            <summary>
            Saves system log into imbVeles.log
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerPostTask.exportExporterLog">
            <summary>
            Saves exporter log into reportExporter.log
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerPostTask.openReport">
            <summary>
            Opens report index.html or other file once finished
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerPostTask.exportReportXmlStructure">
            <summary>
            Exports report XML structure into its root folder
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.render.composerPostTask.zipAll">
            <summary>
            Zips complete report and datestamps it
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.render.metaStyleComposer`1">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <seealso cref="!:imbSCI.Cores.primitives.imbBindable" />
             \ingroup_disabled report_cm_render
        </member>
        <member name="P:imbSCI.Reporting.meta.render.metaStyleComposer`1.sb">
            <summary>
            text rendering instance
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.render.metaStyleComposer`1.getBuilder">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.render.renderCSS">
            \ingroup_disabled report_cm_render
        </member>
        <member name="T:imbSCI.Reporting.meta.render.renderMarkdown">
            <summary>
            String builder in markdown format
            </summary>
            \ingroup_disabled report_cm_render
        </member>
        <member name="T:imbSCI.Reporting.meta.render.renderText">
            <summary>
            Text output renderer
            </summary>
            \ingroup_disabled report_cm_render
        </member>
        <member name="F:imbSCI.Reporting.meta.theme.metaDocumentIncludeEnum.imbHtmlReportCSS">
            <summary>
            Basic CSS
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.theme.metaDocumentIncludeEnum.imbHtmlReportJS">
            <summary>
            Basic JS
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.theme.metaDocumentIncludeEnum.jQuery">
            <summary>
            Include JQuery
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.theme.metaDocumentIncludeEnum.imbImages">
            <summary>
            Include standard images
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.theme.metaDocumentTheme">
            <summary>
            Theme contain all aluxuary settings for HTML and other complex content creation
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.theme.metaDocumentTheme.#ctor">
            <summary>
            Creates new theme and does template loading
            </summary>
            <param name="name"></param>
            <param name="stil"></param>
        </member>
        <member name="M:imbSCI.Reporting.meta.theme.metaDocumentTheme.deployStil(imbSCI.Core.reporting.style.core.styleTheme)">
            <summary>
            automatic execution during construction of object
            </summary>
            <param name="stil"></param>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.name">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.theme.metaDocumentTheme.loadTemplates">
            <summary>
            automatic execution during construction of object
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.cssCompiledCode">
            <summary>
            Resulting CSS file that was built using cssColorTemplate and cssTempalte
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.data">
            <summary>
            Data collected from theme
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.basicStyle">
            <summary>
            style object instance
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.xmlTemplate">
            <summary>
            Template for XML document
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.cssColorTemplate">
            <summary>
            CSS template for one color pallete
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.cssXmlTemplate">
            <summary>
            template for XML css
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.cssTemplate">
            <summary>
            String template of CSS file
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.jsTemplate">
            <summary>
            Java Script template
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.htmlTemplate">
            <summary>
            html template
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.plugins">
            <summary>
            what plugins to include
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.options">
            <summary>
            metaDocumentThemeOptions
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentTheme.include">
            <summary>
            what packages to include into output folder
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.meta.theme.metaDocumentThemeCollection">
            <summary>
            Collection of document theme
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.theme.metaDocumentThemeCollection.makeStandardTheme(System.String,System.String,System.String,System.String,imbSCI.Core.reporting.style.enums.aceFont,imbSCI.Core.reporting.style.enums.aceFont)">
            <summary>
            Creation of new theme
            </summary>
            <param name="name"></param>
            <param name="baseColorA"></param>
            <param name="baseColorB"></param>
            <param name="baseColorC"></param>
            <param name="pageFontName"></param>
            <param name="headingFontName"></param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.meta.theme.metaDocumentThemeManager">
            <summary>
            Maganer for document themes
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.meta.theme.metaDocumentThemeManager.getTheme(System.String)">
            <summary>
            nepotreban metod - moze odmah da se poziva preset[]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.meta.theme.metaDocumentThemeManager.prepare">
            <summary>
            Called on startup
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.meta.theme.metaDocumentThemeManager.preset">
            <summary>
            static and autoinitiated object
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.theme.metaDocumentThemeOptions.navigationOnTop">
            <summary>
            Generate navigation below header content
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.meta.theme.metaDocumentThemeOptions.developmentDocumentation">
            <summary>
            Generate menu with development documentation links
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.model.reportModelContentBase.path">
            <summary>
            Gets or sets the assigned identifier.
            </summary>
            <value>
            The assigned identifier.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.model.reportModelContentBase.name">
            <summary>
            Title for humans
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:imbSCI.Reporting.model.reportModelFileAttachment">
            <summary>
            Set of files to attach
            </summary>
            <seealso cref="!:imbSCI.Reporting.model.reportModelDataContentBase&lt;imbSCI.Reporting.includes.reportIncludeFileCollection&gt;" />
        </member>
        <member name="T:imbSCI.Reporting.NamespaceGroupDoc">
            <summary>
            <para>
            Static web site creation, templating, scriptable reporting and other support classes for reporting.
            imbSCI libraries will help you with in-code data annotation for easier reporting, some interesting data structures(like directed and free graphs, multidimensional collections…), serialization and data manipulation, script driven reporting, single-model for multiple-outputs, static web site generation, generation of D3(JavaScript) charts and graphs, text templates.Data formats covered: text, markdown, html, html-bootstrap, open document text, Excel spreadsheet, CSV, XML, JSON, R Tidy Dataset and more.
            </para>
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:imbSCI.Reporting.resources.reportingCoreManager">
            <summary>
            Manager of reporting resources
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.resources.reportingCoreManager.doVerboseLog">
            <summary>
            Should it produce verbose log output on Meta report model notifications
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.resources.reportingCoreManager.loadReportResourceFile(imbSCI.Reporting.resources.reportResourceFolders,System.String,System.String)">
            <summary>
            Loads <c>BuildAction</c> Content files from two reserved folders.
            </summary>
            <remarks>
            Targeted file must be set: BuildAction = Content, Copy Local = Always
            </remarks>
            <param name="rdir">Folder with the file</param>
            <param name="foldername">If there is subfolder - name it</param>
            <param name="filename">Full filename, including extension</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.resources.reportingCoreManager.prepare">
            <summary>
            Prepares this instance.
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.script.docScript">
            <summary>
            Script that genererates output document. It may be used multiple times to generate different outputs
            </summary>
            <remarks>
            Script containes ordinal instructions with content of data applied template.
            </remarks>
            <seealso cref="!:System.Collections.Generic.List&lt;imbSCI.Cores.reporting.script.docScriptInstruction&gt;" />
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendExe``1">
            <summary>
            Appends the executable kernel
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendExe(imbSCI.Reporting.script.exeAppenders.IExeAppend)">
            <summary>
            Appends the executable kernel
            </summary>
            <param name="exeRunner">The executable runner.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendButton(System.String,System.String,imbSCI.Core.reporting.render.converters.bootstrap_color,imbSCI.Core.reporting.render.converters.bootstrap_size)">
            <summary>
            Appends the button.
            </summary>
            <param name="caption">The caption.</param>
            <param name="url">Apsolutni path od roota sajta do lokacije cilja.</param>
            <param name="color">The color.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendDirect(System.String)">
            <summary>
            Direct content injection, bypassing all internal transformations by class implementing <see cref="T:imbSCI.Cores.reporting.render.ITextRender" />
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendToFile(System.String,System.String)">
            <summary>
            Saves <c>content</c> to specified path. Path is local to context scope
            </summary>
            <param name="outputpath">The filepath, including filename and extension</param>
            <param name="content">Any string content</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendFromFile(System.String,imbSCI.Data.enums.fields.templateFieldSubcontent,System.Boolean)">
            <summary>
            Loads content from <c>sourcepath</c> into renderer [if <c>datakey</c> is <see cref="F:imbSCI.Cores.reporting.render.fields.templateFieldSubcontent.none" /> or into data field if specified.
            </summary>
            <param name="sourcepath">The sourcepath.</param>
            <param name="datakey">The datakey.</param>
            <param name="isLocalSource">if set to <c>true</c><c>sourcepath</c> is interpreted as local to context</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendFile(System.String,System.String,System.Boolean)">
            <summary>
            File from <c>sourcepath</c> is copied to <c>outputpath</c> or used as data template if <c>isDataTeplate</c> is true
            </summary>
            <param name="sourcepath">The sourcepath - within application directory</param>
            <param name="outputpath">The outputpath - local to context</param>
            <param name="isDataTemplate">if set to <c>true</c> the <c>soucepath</c> content will be processed as data template before saving output to <c>outputpath</c></param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendImage(System.String,System.String,System.String)">
            <summary>
            Appends the image tag/call.
            </summary>
            <param name="imageSrc">Source url/path of the image</param>
            <param name="imageAltText">The image alt text.</param>
            <param name="imageRef">The image reference ID used internally</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendMath(System.String,System.String)">
            <summary>
            Inserts <c>mathFormula</c> block
            </summary>
            <param name="mathFormula">The math formula: LaTeX, KaTex, asciimath...</param>
            <param name="mathFormat">The math format used to describe the formula</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendLabel(System.String,System.Boolean,System.Object)">
            <summary>
            Appends the content with label decoration
            </summary>
            <param name="content">The content to show inside label</param>
            <param name="isBreakLine">if set to <c>true</c> if will break line after this append</param>
            <param name="comp_style">Special style tag, class, definition.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendPanel(System.String,System.String,System.String,System.Object)">
            <summary>
            Creates panel with <c>content</c> and (optionally) with <c>comp_heading</c> and <c>comp_description</c> as footer.
            </summary>
            <param name="content">String content to place inside the panel</param>
            <param name="comp_heading">The heading for the panel. If blank panel will have no heading</param>
            <param name="comp_description">Description to be placed at bottom of the panel</param>
            <param name="comp_style">Special style tag, class, definition.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendFunction(System.String,System.Boolean)">
            <summary>
            Appends the function.
            </summary>
            <param name="functionCode">The function code.</param>
            <param name="breakLine">if set to <c>true</c> [break line].</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendFrame(System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            HTML/XML adds <c></c>
            </summary>
            <param name="content">Initial content</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="title">Title of the section</param>
            <param name="footnote">Description under the section</param>
            <param name="paragraphs">Additional paragraphs to place inside</param>
            <returns>
            OuterXML/String or proper DOM object of container
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendPlaceholder(System.Object,System.Boolean)">
            <summary>
            Appends string with template placeholder tag {{{ }}} / creates field to call custom property --&gt; for document builder: introduces custom parameter and field
            </summary>
            <param name="fieldName">String, enum what ever</param>
            <param name="breakLine">on TRUE it is new line call, on FALSE its inline call</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendHorizontalLine">
            <summary>
            Horizontal line divider.
            </summary>
            <remarks>
            It respect active full width and/or background color
            </remarks>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendComment(System.String)">
            <summary>
            On HTML/XML builder adds invisible comment tag, on Table builder it adds comment to the current cell, on Document builder it adds pop-up comment on aplicable way
            </summary>
            <param name="content">Text content for the paragraph</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendHeading(System.String,System.Int32)">
            <summary>
            HTML/XML builder adds H tag with proper level sufix, on Table it applies style and for H1 and H2
            </summary>
            <param name="content">Text</param>
            <param name="level">from 1 to 6</param>
            <returns>
            OuterXML/String or proper DOM object of container
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendQuote(System.String)">
            <summary>
            HTML/XML adds <c>q</c> tag, Table aplies <c>smallText</c> style
            </summary>
            <param name="content">Text content of the quote</param>
            <returns>
            OuterXML/String or proper DOM object of container
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendCite(System.String)">
            <summary>
            HTML/XML adds <c>q</c> tag, Table aplies <c>smallText</c> style
            </summary>
            <param name="content">Text content of the quote</param>
            <returns>
            OuterXML/String or proper DOM object of container
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendCode(System.String)">
            <summary>
            HTML/XML adds <c>q</c> tag, Table aplies <c>smallText</c> style
            </summary>
            <param name="content">Text content of the quote</param>
            <returns>
            OuterXML/String or proper DOM object of container
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendCode(System.String,System.String)">
            <summary>
            HTML/XML adds <c>q</c> tag, Table aplies <c>smallText</c> style
            </summary>
            <param name="content">Text content of the quote</param>
            <param name="codetypename">The codetypename: i.e. html</param>
            <returns>
            OuterXML/String or proper DOM object of container
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendPairs(System.Data.PropertyCollection,System.Boolean,System.String)">
            <summary>
            Appends collection of pairs.
            </summary>
            <param name="data">Data to use as pair source</param>
            <param name="isHorizontal">Should output be horizontal</param>
            <param name="between">Content to place between. If empty it will skip middle column</param>
            <returns>
            OuterXML/String or proper DOM object of container
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendParagraph(System.String,System.Boolean)">
            <summary>
            Appends content wrapped into paragraph tag. Table builders will merge whole line if "fullWidth" is TRUE.
            </summary>
            <param name="content">Text content for the paragraph</param>
            <param name="fullWidth">if TRUE it will maximize width</param>
            <returns>
            OuterXML/String or proper DOM object of container
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendSection(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates new section with title and content. Optionally it may contain: additional paragraphs for content and footnote on bottom
            </summary>
            <param name="content">Main content of the section</param>
            <param name="title">Title of the section</param>
            <param name="footnote">Description under the section</param>
            <param name="paragraphs">Additional paragraphs to place inside</param>
            <returns>
            OuterXML/String or proper DOM object of container
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendPair(System.String,System.Object,System.Boolean,System.String)">
            <summary>
            Renders key-&gt; value pair
            </summary>
            <param name="key">Property name or collection key</param>
            <param name="value">ToString value</param>
            <param name="breakLine">should break line</param>
            <param name="between"></param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.Append(System.String,imbSCI.Data.enums.appends.appendType,System.Boolean)">
            <summary>
            Appends inline or new line content.
            </summary>
            <param name="content">String content to be wrapped into container</param>
            <param name="type">Container type - for text it is always none</param>
            <param name="breakLine">Inline (FALSE) or new line (TRUE)</param>
            <remarks>
            It is supported by: Source, Document and Table builders
            </remarks>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendLine(System.String)">
            <summary>
            Appends the line.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendList(System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            Renders IEnumerable that may contain other IEnumerables
            </summary>
            <param name="content">Collection with objects and/or subcollections</param>
            <param name="isOrderedList">On TRUE it will be ordered list with number, FALSE will create button list</param>
            <remarks>
            In Document builders isOrderedList has isHorizontal role
            </remarks>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendLink(System.String,System.String,System.String,imbSCI.Data.enums.appends.appendLinkType)">
            <summary>
            Renders link, image or reference
            </summary>
            <param name="url">url or reference id</param>
            <param name="name">Name of link</param>
            <param name="caption">Title - popup content</param>
            <param name="linkType">Select if output is link, image or reference</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.AppendTable(System.Data.DataTable,System.Boolean)">
            <summary>
            Renders DataTable
            </summary>
            <param name="table">The table.</param>
            <param name="doThrowException">if set to <c>true</c> it will throw an exception on <see cref="!:validateTable()"/> return false.</param>
        </member>
        <member name="P:imbSCI.Reporting.script.docScript.flags">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.ToFile(imbSCI.Reporting.script.docScriptInstructionTextFormatEnum,System.String,imbSCI.Data.enums.externalTool)">
            <summary>
            Save docScript in <c>textFormat</c> and open it with <c>openWith</c> external tool
            </summary>
            <param name="textFormat">The text format.</param>
            <param name="filepath">The filepath.</param>
            <param name="openWith">The open with.</param>
            <returns>Filepath where script was saved</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.ToString(imbSCI.Reporting.script.docScriptInstructionTextFormatEnum)">
            <summary>
            To the string.
            </summary>
            <param name="textFormat">The text format.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.script.docScript"/> class.
            </summary>
            <param name="__name">The name.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.#ctor(imbSCI.Core.reporting.render.IRenderExecutionContext)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.script.docScript"/> class.
            </summary>
            <param name="__context">The context.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.insertSub(System.Collections.Generic.IList{imbSCI.Reporting.script.docScriptInstruction},imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Inserts set of instructions
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.s_width(System.Int32,System.Int32,System.Boolean,System.Boolean,imbSCI.Core.reporting.zone.textCursorZoneCorner)">
            <summary>
            Sets dimension of column or row
            </summary>
            <param name="id">From cursor position relative id to target column/row</param>
            <param name="units">Width/height to set</param>
            <param name="setRow">TRUE it will set row, FALSE it will set column</param>
            <param name="setAutofit">if set to <c>true</c> [set autofit].</param>
            <param name="corner">The corner - to set alignment.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.section(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Section of specific column width has: title, content and footer.
            </summary>
            <param name="title">The heading - first row</param>
            <param name="footer">The footer lowest row in section structure</param>
            <param name="content">The content multiline content to render between heading and footer</param>
            <param name="width">The width in columns - for -1 it will use complete zone width.</param>
            <returns>
            Instruction set
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.pairs(System.String,System.String,System.Data.PropertyCollection,System.String,System.Int32,System.Boolean)">
            <summary>
            Create paris table with title, footer and middle cell
            </summary>
            <param name="title">The title.</param>
            <param name="footer">The footer.</param>
            <param name="pairs">The pairs.</param>
            <param name="between">The between.</param>
            <param name="width">The width.</param>
            <param name="isHorizontal">if set to <c>true</c> [is horizontal].</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.list(System.String,System.String,System.Collections.IEnumerable,System.Int32,System.Boolean)">
            <summary>
            Lists the specified title.
            </summary>
            <param name="title">The title.</param>
            <param name="footer">The footer.</param>
            <param name="items">The items.</param>
            <param name="width">The width.</param>
            <param name="isHorizontal">if set to <c>true</c> [is horizontal].</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.s_style">
            <summary>
            Turns off active styling - current was set with <see cref="F:imbSCI.Core.reporting.style.enums.styleApplicationFlag.setAsActive"/> call
            </summary>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.s_settings(imbSCI.Core.reporting.colors.aceColorPalette,System.Int32,imbSCI.Core.reporting.colors.acePaletteShotResEnum)">
            <summary>
            Going to set background into proper color
            </summary>
            <param name="palette">The palette.</param>
            <param name="variation">The variation.</param>
            <param name="resource">The resource.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.s_style(imbSCI.Core.reporting.style.shot.IStyleInstruction,imbSCI.Reporting.script.styleShotTargetEnum)">
            <summary>
            Direct styling shot pass
            </summary>
            <param name="shot">The shot to be applied</param>
            <param name="target">The target of application</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.s_style(imbSCI.Core.reporting.style.enums.styleApplicationFlag,imbSCI.Reporting.script.styleShotTargetEnum)">
            <summary>
            Sets styling and/or turns on active styling.
            </summary>
            <param name="app">flags describing way of style application</param>
            <param name="target">designate target of style application</param>
            <returns>Instruction that was just set</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.openSub(imbSCI.Data.enums.fields.templateFieldSubcontent)">
            <summary>
            Starts subcontent session
            </summary>
            <param name="subcontent">The subcontent.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.closeSub">
            <summary>
            Closes the current subcontent session
            </summary>
            <param name="subcontent">The subcontent.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.x_exportEnd(System.String,imbSCI.Core.reporting.format.reportOutputFormatName)">
            <summary>
            Close export session and restore primary IDocumentRenderer
            </summary>
            <param name="filenamebase">Filename and session ID in the same time.</param>
            <param name="fileformat">The fileformat to use to save exported content</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.x_move(imbSCI.Core.reporting.zone.textCursorZoneCorner,System.Int32,System.Boolean)">
            <summary>
            Moves the cursor
            </summary>
            <param name="direction">The direction.</param>
            <param name="steps">The steps.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.i_load(imbSCI.Data.enums.appends.appendType,System.String,imbSCI.Core.reporting.format.reportOutputFormatName)">
            <summary>
            Load content into page/document. Inner append is performed for each line
            </summary>
            <param name="innerAppend">Way loaded content should be appended: <see cref="!:imbSCI.Cores.enums.appendType.i_document"/>, <see cref="!:imbSCI.Cores.enums.appendType.i_page"/>, and any other append for each line>:<see cref="!:imbSCI.Cores.enums.appendType"/></param>
            <param name="path">The path.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.add(imbSCI.Data.enums.appends.appendType,imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Add appends with: scopein, scopeout, save, to data etc. operations over IMetaContent object
            </summary>
            <param name="__type">The type.</param>
            <param name="__scope">The scope.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScript.add(imbSCI.Data.enums.appends.appendType,imbSCI.Reporting.script.docScriptArguments[])">
            <summary>
            Adds new instruction into script
            </summary>
            <param name="__type">The type.</param>
            <param name="__arguments">The arguments.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.script.docScript.name">
            <summary>
            Name of source documentSet or other kind of source
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.script.docScript.context">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptAppendExtensions.titleToFilename(System.String)">
            <summary>
            Titles to filename.
            </summary>
            <param name="title">The title.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptAppendExtensions.AppendMacroSimpleTable(imbSCI.Reporting.interfaces.ITextAppendContentExtended,System.Data.DataTable,System.Boolean,imbSCI.Reporting.script.macroOptions)">
            <summary>
            Appends the macro simple table.
            </summary>
            <param name="script">The script.</param>
            <param name="source">The source.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns></returns>
            <exception cref="!:imbSCI.Cores.core.exceptions.aceReportException">Can't append table with 0 columns, 0 rows and without title - null - Macro: DataTable block failed</exception>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptAppendExtensions.AppendMacroLegend(imbSCI.Reporting.interfaces.ITextAppendContentExtended,System.Data.DataTable)">
            <summary>
            Appends the macro legend.
            </summary>
            <param name="script">The script.</param>
            <param name="table">The table.</param>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptAppendExtensions.defaultRowLimit">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptAppendExtensions.AppendMacroDataTableBlock(imbSCI.Reporting.interfaces.ITextAppendContentExtended,System.Data.DataTable,System.String,System.Int32,imbSCI.Reporting.script.macroOptions)">
            <summary>
            Shows first <c>rowLimit</c> and provides exported versions
            </summary>
            <param name="script">The script.</param>
            <param name="source">The source.</param>
            <param name="title">The title.</param>
            <param name="rowLimit">The row limit. -1 to disable row limit, 0 to use default</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptAppendExtensions.AppendMacroDownload(imbSCI.Reporting.interfaces.ITextAppendContentExtended,System.Data.DataTable)">
            <summary>
            Appends the macro download.
            </summary>
            <param name="script">The script.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptAppendExtensions.AppendMacroRecordLogFileBlock(imbSCI.Reporting.interfaces.ITextAppendContentExtended,imbSCI.Core.reporting.ILogBuilder,System.String,System.Int32,imbSCI.Reporting.script.macroOptions)">
            <summary>
            Shows first <c>rowLimit</c> and provides exported versions
            </summary>
            <param name="script">The script.</param>
            <param name="source">The source.</param>
            <param name="title">The title.</param>
            <param name="rowLimit">The row limit.</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.script.docScriptArguments">
            <summary>
            Arguments applicable with docScriptInstruction
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_content">
            <summary>
            The DSA content lines: IEnumerable of String or other simple type
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_contentLine">
            <summary>
            The DSA content line: String
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_recompile">
            <summary>
            Calls for template recompilation of <c>content</c> and <c>contentLine</c>
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_innerAppend">
            <summary>
            AppendType to use for internal append procedure *special*
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_title">
            <summary>
            The DSA title: String for title
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_footer">
            <summary>
            The DSA footer: Footer message
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_key">
            <summary>
            The DSA key: key for KeyValue pair
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_value">
            <summary>
            The DSA value: value for KeyValue pair
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_url">
            <summary>
            The DSA URL: URL for link
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_name">
            <summary>
            The DSA name: name is used by many Appends
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_level">
            <summary>
            The DSA level: heading level
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_x">
            <summary>
            The DSA x: X position
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_y">
            <summary>
            The DSA y: Y position
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_w">
            <summary>
            The DSA w: width
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_h">
            <summary>
            The DSA h: height
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_priority">
            <summary>
            The DSA priority: for pages and documents
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_dataTable">
            <summary>
            The DSA data table: DataTable object
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_dataPairs">
            <summary>
            The DSA data pairs: PropertyCollection
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_paletteRole">
            <summary>
            The DSA palette role: palette selector
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_path">
            <summary>
            The DSA path: path to external file etc
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_type">
            <summary>
            The DSA type: appendType
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_isHorizontal">
            <summary>
            The DSA is horizontal: horizontal or pivot deployement
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_dataField">
            <summary>
            The DSA data field - data field enum value to access data from or to
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_enumType">
            <summary>
            The DSA enum type - reference to enumeration type
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_border_preset">
            <summary>
            The DSA border preset - border to apply on closed tag
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_dataSource">
            <summary>
            The DSA data source - what source of dynamic data to target
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_dirOperation">
            <summary>
            What directory operation to perform
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_cursorCorner">
            <summary>
            The DSA cursor corner - to what corner cursor should go
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_externalTool">
            <summary>
            The DSA external tool - external tool to call
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_zoneFrame">
            <summary>
            Target zone subframe
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_description">
            <summary>
            Description text
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_blockWidth">
            <summary>
            Width of the block
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_blockPosition">
            <summary>
            Horizontal position on page
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_linkType">
            <summary>
            Type of link - can be: metaLinkType and metaRelativeLinkType
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_linkRelType">
            <summary>
            Type of relative link
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_metaContent">
            <summary>
            Reference to metaContent building block
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_class_attribute">
            <summary>
            Class attribute to set in HTML/XML export
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_id_attribute">
            <summary>
            ID attribute to set in HTML/XML export
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_separator">
            <summary>
            Content of middle cell in pairs rendering
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_variationRole">
            <summary>
            The DSA variation role
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_scopeToNew">
            <summary>
            Scope will move to newly created item: directorium, document, page...
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_doMerge">
            <summary>
            If TRUE it will merge cells scoped by current <c>dsa_w</c> and <c>dsa_h</c>
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_autostyling">
            <summary>
            Instructs styling behaviour
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_styleTarget">
            <summary>
            Points to item that should be styled
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_on">
            <summary>
            Universal <c>on</c> flag. Also used as <c>open</c>, <c>start</c>, <c>play</c> too.
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptArguments.dsa_off">
            <summary>
            Universal <c>off</c> flag. Used as <c>close</c>, <c>finish</c>, <c>stop</c> too.
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.script.docScriptCompiled">
            <summary>
            Compiled resion of the script
            </summary>
            <seealso cref="!:imbSCI.Cores.primitives.imbBindable" />
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptCompiled.compile(imbSCI.Reporting.script.docScriptInstruction,imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.collection.PropertyCollectionDictionary,System.Data.PropertyCollection,imbSCI.Reporting.script.docScriptFlags)">
            <summary>
            Adds the specified ins.
            </summary>
            <param name="ins">The ins.</param>
            <returns></returns>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptCompiled.scriptInstructions">
            <summary>
            The script instructions
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptCompiled.missingData">
            <summary>
            List of placeholders that were missing data points suring compile process
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptCompiled.#ctor(imbSCI.Reporting.script.docScript)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.script.docScriptCompiled"/> class.
            </summary>
            <param name="script">The script.</param>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptCompiled.currentDataPath">
            <summary>
            current data path
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptCompiled.name">
            <summary>
            Name of source documentSet or other kind of source
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptCompiled.filename">
            <summary>
            Gets the filename.
            </summary>
            <value>
            The filename.
            </value>
        </member>
        <member name="T:imbSCI.Reporting.script.docScriptExecution">
            <summary>
            Complete context of docScript execution
            </summary>
            <seealso cref="!:imbSCI.Cores.primitives.imbBindable" />
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecution.#ctor(System.String,imbSCI.Core.reporting.style.core.styleTheme,System.Data.PropertyCollection,imbSCI.Core.reporting.render.ITextRender[])">
             <summary>
             Execution context with all resorces required internally.
             </summary>
             <remarks>
             <para>It will not start compilation instantly. Once you're ready <see cref="!:docScriptExecution.execute(string, imbSCI.Core.reporting.format.reportOutputFormatName, PropertyCollection, string)"/>  method should be called.</para>
            
             </remarks>
             <param name="__render">The render - particular output engine</param>
             <param name="__style">The style - colors and fonts</param>
             <param name="__script">The script - script with templated content</param>
             <param name="__data">The data - initial data</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecution.#ctor(System.String,imbSCI.Core.reporting.style.core.styleTheme,System.Data.PropertyCollection,System.Collections.Generic.IEnumerable{imbSCI.Core.reporting.render.ITextRender})">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.script.docScriptExecution"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="__style">The style.</param>
            <param name="__data">The data.</param>
            <param name="__renders">The renders.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecution.runOtherInstruction(imbSCI.Reporting.script.docScriptInstruction)">
            <summary>
            Instructions not covered yet
            </summary>
            <param name="instruction">The instruction.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecution.runComplexInstruction(imbSCI.Reporting.script.docScriptInstruction)">
            <summary>
            Compiles complex appends. Returns <c>appendType</c> if it is no match for this <c>runner</c>.
            </summary>
            <param name="ins">The ins.</param>
            <remarks>OK for multimpleruns</remarks>
            <returns><c>appendType.none</c> if executed, other <c>appendType</c> if no match for this run method</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecution.runSpecialInstruction(imbSCI.Reporting.script.docScriptInstruction)">
            <summary>
            Runs the special instruction.
            </summary>
            <param name="ins">The ins.</param>
            <remarks>THIS IS NOT FOR LOOP EXECUTION</remarks>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecution.resolveAreaForStyleShot(System.Object)">
            <summary>
            Resolves target into <see cref="T:imbSCI.Core.reporting.zone.selectRangeArea"/> where <c>target</c> can be: <see cref="T:imbSCI.Reporting.script.styleShotTargetEnum"/>, <see cref="T:imbSCI.Core.reporting.zone.selectRangeArea"/> or string path for <see cref="!:imbSCI.Data.collection.PropertyCollectionDictionary"/>
            </summary>
            <param name="target">The target.</param>
            <returns>Area to apply style to</returns>
            <seealso cref="T:imbSCI.Core.reporting.zone.selectRangeAreaDictionary"/>
            <seealso cref="T:imbSCI.Core.reporting.zone.selectRangeArea"/>
            <seealso cref="T:imbSCI.Core.reporting.style.shot.IStyleInstruction"/>
            <seealso cref="T:imbSCI.Core.reporting.style.areaStyleInstruction"/>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecution.resolveAreaForStyleShot(imbSCI.Reporting.script.styleShotTargetEnum)">
            <summary>
            Resolve <see cref="T:imbSCI.Reporting.script.styleShotTargetEnum"/> into <see cref="T:imbSCI.Core.reporting.zone.selectRangeArea"/>
            </summary>
            <param name="target">The target - </param>
            <returns>Area to apply style with</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecution.resolvePathForStyleShotArea(imbSCI.Reporting.script.styleShotTargetEnum)">
            <summary>
            Resolve <see cref="T:imbSCI.Reporting.script.styleShotTargetEnum"/> into string path for <c>metaContentRanges</c>
            </summary>
            <param name="target">The target.</param>
            <returns>
            Path for <c>metaContentRanges</c>
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">target - thisAppend is not applicable for path resolution</exception>
            <seealso cref="!:imbSCI.Data.collection.PropertyCollectionDictionary" />
            <seealso cref="T:imbSCI.Core.reporting.style.areaStyleInstructionStack" />
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecution.runStyleInstruction(imbSCI.Reporting.script.docScriptInstruction)">
            <summary>
            Runs the style instruction.
            </summary>
            <param name="ins">The ins.</param>
            <returns></returns>
            <remarks>This is for mutliple execution</remarks>
            <exception cref="T:System.NotImplementedException">No implementation for: " + ins.type.ToString()</exception>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecution.execute(imbSCI.Reporting.script.docScriptInstruction,imbSCI.Data.enums.appends.appendTypeKind,imbSCI.Data.enums.appends.appendType)">
            <summary>
            Executes the specified ins.
            </summary>
            <param name="ins">The ins.</param>
            <param name="kind">The kind.</param>
            <returns></returns>
        </member>
        <member name="T:imbSCI.Reporting.script.docScriptExecutionBase">
             <summary>
            
             </summary>
             <seealso cref="!:imbACE.Core.core.builderForLog" />
             <seealso cref="T:imbSCI.Core.reporting.render.IRenderExecutionContext" />
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.doVerboseLog">
            <summary> </summary>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.regFileOutput(System.String,System.String,System.String,System.String)">
            <summary>
            Regs the file output.
            </summary>
            <param name="filepath">The filepath.</param>
            <param name="idPath">The identifier path.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.saveFileOutput(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Saves the file output.
            </summary>
            <param name="output">The output.</param>
            <param name="filepath">The filepath.</param>
            <param name="idPath">The identifier path.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.linkRegistry">
             <summary>
            
             </summary>
            
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.specialLogOuts">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.settings">
            <summary>
            Builder settings
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptExecutionBase.instructionsWithError">
            <summary>
            List of instructions had execution error
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.render">
            <summary>
            renderer that will be used for output creation
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.setForFormat(imbSCI.Core.reporting.format.reportOutputFormatName)">
            <summary>
            prepares builder to support format
            </summary>
            <param name="targetFormat">The target format.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.builder">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.styleStack">
            <summary>
            Scheduled styling instructions -- used to process> current append or future append
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.metaContentRanges">
            <summary>
            Dictionary of selectRangeArea entries for each metaContent member
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.outputRepositorium">
            <summary>
            resulting set of outputs ready for save
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.directoryScope">
            <summary>
            Gets or sets the directory current.
            </summary>
            <value>
            The directory current.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.directoryRoot">
            <summary>
            Gets or sets the directory root.
            </summary>
            <value>
            The directory root.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.fileInfo">
            <summary>
            Gets or sets the fileinfo.
            </summary>
            <value>
            The fileinfo.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.theme">
            <summary>
            style to be applied
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.script">
            <summary>
            Script to be executed
            </summary>
            <value>
            Collection of instructions
            </value>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.index">
            <summary>
            Execution index - how many instructions are done so far
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.dataDictionary">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.data">
            <summary>
            Bindable property
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.scope">
            <summary>
            Current scope - meta objects being processed
            </summary>
            \ingroup_disabled renderapi_service
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.script.docScriptExecutionBase"/> class.
            </summary>
            <param name="__filename">The log output filename with extension .md. It will automatically set .md extension</param>
            <param name="autoSave">if set to <c>true</c> if will do automatic save on each log call.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.compile(imbSCI.Reporting.script.docScript,imbSCI.Core.collection.PropertyCollectionDictionary)">
            <summary>
            Compiles the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="indata">The indata.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.addOrUpdateStateData(System.Data.PropertyCollection)">
            <summary>
            Adds the or update state data.
            </summary>
            <param name="targetData">The target data.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.x_scopeAutoCreate(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            xes the scope automatic create.
            </summary>
            <param name="newScope">The new scope.</param>
            <exception cref="T:System.NotImplementedException">
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.x_scopeAutoSave(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            xes the scope automatic save.
            </summary>
            <param name="oldScope">The old scope.</param>
            <exception cref="T:System.NotImplementedException">
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.x_scopeIn(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Scope moved into provided object
            </summary>
            <param name="newScope">The new scope.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.x_scopeOut">
            <summary>
            Exit to parent scope
            </summary>
            <param name="newScope">The new scope.</param>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.externalLog">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptExecutionBase.name">
             <summary>
            
             </summary>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.error(System.String,imbSCI.Data.enums.appends.appendType,System.Exception)">
            <summary>
            Reports an error with optional message and exception
            </summary>
            <param name="msg">Custom message about the error</param>
            <param name="atype">Type of Append operation that caused error</param>
            <param name="ex">Exception if happen</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.compileError(System.String,imbSCI.Reporting.script.docScriptInstructionCompiled,System.Exception)">
            <summary>
            Reports template compilation error
            </summary>
            <param name="message">The message.</param>
            <param name="compiled">The compiled.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptExecutionBase.executionError(System.String,imbSCI.Reporting.script.docScriptInstruction,System.Exception)">
            <summary>
            Reporting <c>docScriptInstructionCompiled</c> execution error
            </summary>
            <param name="message">The message.</param>
            <param name="ins">The ins.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptFlags.ignoreCompilationFails">
            <summary>
            It will not report error on compilation failure
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptFlags.allowFailedInstructions">
            <summary>
            It will allow exection of <see cref="T:imbSCI.Reporting.script.docScriptInstructionCompiled"/> even in case of compilation failure
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptFlags.disableGlobalCollection">
            <summary>
            The disable global collection call on <see cref="!:deliveryInstance.executePrepare(meta.documentSet.metaDocumentSet, string, PropertyCollection)"/>
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptFlags.enableLocalCollection">
            <summary>
            It will allow AppendDataFields call on newScope when <see cref="!:deliveryInstance.x_scopeAutoCreate(IObjectWithPathAndChildSelector)"/> performed
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.script.docScriptInstruction">
            <summary>
            One instruction in doc script
            </summary>
            <seealso cref="T:System.Data.PropertyCollection" />
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptInstruction.defaultInstruction">
            <summary>
            Instance of instruction with default values
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.ArgumentToString(imbSCI.Reporting.script.docScriptInstructionTextFormatEnum,imbSCI.Reporting.script.docScriptArguments,System.Object)">
            <summary>
            Arguments to string.
            </summary>
            <param name="textFormat">The text format.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.ToString(imbSCI.Reporting.script.docScriptInstructionTextFormatEnum)">
            <summary>
            To the string.
            </summary>
            <param name="textFormat">The text format.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.#ctor(imbSCI.Data.enums.appends.appendType,System.String,System.Boolean)">
            <summary>
            The most common Append instruction: <see cref="T:imbSCI.Reporting.script.docScriptInstruction"/> class.
            </summary>
            <remarks>
            Applicable with appendType: cite, code,
            </remarks>
            <param name="__type">The type.</param>
            <param name="__input">The input.</param>
            <param name="__isHorizontal">if set to <c>true</c> [is horizontal].</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.#ctor(imbSCI.Data.enums.appends.appendType,imbSCI.Reporting.script.docScriptArguments[])">
            <summary>
            Requires immediate <c>set()</c> call to set values for arguments
            </summary>
            <param name="__type">The type.</param>
            <param name="__arguments">The arguments.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.hr(System.Boolean)">
            <summary>
            Sets isHorizontal --- true or false
            </summary>
            <param name="noItIsNot">if set to <c>true</c> [no it is not].</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Reporting.script.docScriptArguments,System.Object)">
            <summary>
            Define new argument KeyValuePair
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(System.Type)">
            <summary>
            Setting dsa_enumType argument
            </summary>
            <param name="enumType">Value for dsa_enumType</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Core.reporting.style.enums.styleBordersPreset)">
            <summary>
            Setting dsa_border_preset argument
            </summary>
            <param name="border_preset">Value for dsa_border_preset</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Core.reporting.zone.cursorSubzoneFrame)">
            <summary>
            Setting dsa_zoneFrame argument
            </summary>
            <param name="zoneFrame">Value for dsa_zoneFrame</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Data.enums.directoryOperation)">
            <summary>
            Setting dsa_dirOperation argument
            </summary>
            <param name="dirOperation">Value for dsa_dirOperation</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Core.reporting.zone.textCursorZoneCorner)">
            <summary>
            Setting dsa_cursorCorner argument
            </summary>
            <param name="cursorCorner">Value for dsa_cursorCorner</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Data.enums.externalTool)">
            <summary>
            Setting dsa_externalTool argument
            </summary>
            <param name="externalTool">Value for dsa_externalTool</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Data.enums.fields.templateFieldBasic)">
            <summary>
            Setting dsa_dataField argument
            </summary>
            <param name="dataField">Value for dsa_dataField</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Data.enums.fields.templateFieldDataTable)">
            <summary>
            Setting dsa_dataField argument
            </summary>
            <param name="dataField">Value for dsa_dataField</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Data.enums.fields.templateFieldSubcontent)">
            <summary>
            Setting dsa_dataField argument
            </summary>
            <param name="dataField">Value for dsa_dataField</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Data.enums.fields.templateFieldWebPageReport)">
            <summary>
            Setting dsa_dataField argument
            </summary>
            <param name="dataField">Value for dsa_dataField</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Core.reporting.colors.acePaletteRole)">
            <summary>
            Setting dsa_paletteRole argument
            </summary>
            <param name="paletteRole">Value for dsa_paletteRole</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Core.reporting.colors.acePaletteVariationRole)">
            <summary>
            Setting dsa_variationRole argument
            </summary>
            <param name="variationRole">Value for dsa_variationRole</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Reporting.meta.blocks.blockWidth)">
            <summary>
            Setting dsa_blockWidth argument
            </summary>
            <param name="blockWidth">Value for dsa_blockWidth</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Reporting.meta.blocks.blockPosition)">
            <summary>
            Setting dsa_blockPosition argument
            </summary>
            <param name="blockPosition">Value for dsa_blockPosition</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Data.enums.fields.dataSource)">
            <summary>
            Setting dsa_dataSource argument
            </summary>
            <param name="dataSource">Value for dsa_dataSource</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Core.interfaces.IMetaContentNested)">
            <summary>
            Setting dsa_metaContent argument
            </summary>
            <param name="metaContent">Value for dsa_metaContent</param>
            <returns>Instruction</returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Data.enums.appends.appendLinkType,System.String,System.String,System.String)">
            <summary>
            Setting dsa_linkType argument
            </summary>
            <param name="linkType">Value for dsa_linkType</param>
            <param name="url">The URL.</param>
            <param name="title">The title to pop up</param>
            <param name="name">Link name shown</param>
            <returns>
            Instruction
            </returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.arg(imbSCI.Data.enums.appends.appendRelativeLinkType,System.String,System.String)">
            <summary>
            Arguments the specified link type.
            </summary>
            <param name="linkType">Type of the link.</param>
            <param name="path">The path.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstruction.set(System.Object[])">
            <summary>
            Sets the specified values to arguments on the same order as it was defined in constructor
            </summary>
            <param name="__values">The values.</param>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptInstruction.input">
            <summary>
            Main input
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptInstruction.isHorizontal">
            <summary>
            Applied as: inline append, or pivot params rendering
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptInstruction.type">
            <summary>
            what append type to execute
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.script.docScriptInstructionCompiled">
            <summary>
            Compiled version of docScriptInstruction with compilation debug information
            </summary>
            <seealso cref="T:imbSCI.Reporting.script.docScriptInstruction" />
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptInstructionCompiled.missingData">
            <summary>
            List of placeholders that were missing data points suring compile process
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptInstructionCompiled.keyListForNonStrings">
            <summary>
            list of properties that are not strings
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptInstructionCompiled.keyListForStringCollections">
            <summary>
            list of properties with string collection
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptInstructionCompiled.keyListForStrings">
            <summary>
            List of properties with String type value
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptInstructionCompiled.keyListForFailedStrings">
            <summary>
            List of properties that had no required data to finish template compilation
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptInstructionCompiled.isCompileFailed">
            <summary>
            Indicating whether compile did failed on any placeholder or string lines
            </summary>
            <value>
            <c>true</c> if this instance is compile failed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptInstructionCompiled.isCompilable">
            <summary>
            Indicating if string arguments were detected
            </summary>
            <value>
            <c>true</c> if this instance is compilable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstructionCompiled.analyse(imbSCI.Reporting.script.docScriptFlags)">
            <summary>
            Populates keyLists
            </summary>
            <exception cref="T:System.ArgumentNullException">docScriptArgument can't have null value!</exception>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstructionCompiled.compileTemplate(System.Data.PropertyCollection[])">
            <summary>
            Compiles template arguments using dataSets
            </summary>
            <param name="dataSets">The data sets to apply</param>
        </member>
        <member name="M:imbSCI.Reporting.script.docScriptInstructionCompiled.applyLine(System.String,imbSCI.Reporting.script.docScriptArguments,System.Data.PropertyCollection[])">
            <summary>
            Applies the dataset on the line
            </summary>
            <param name="line">The line.</param>
            <param name="arg">The argument.</param>
            <param name="dataSets">The data sets.</param>
            <returns></returns>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptInstructionTextFormatEnum.cs_compose">
            <summary>
            C# source code for direct execution of report generation <see cref="M:imbSCI.Reporting.script.docScript.ToString(imbSCI.Reporting.script.docScriptInstructionTextFormatEnum)"/>
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.docScriptInstructionTextFormatEnum.meta">
            <summary>
            Diagnostic view
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.script.docScriptStandaloneContextWrapper">
            <summary>
            Wrapper with it's own directoryScope and directoryRoot
            </summary>
            <seealso cref="T:imbSCI.Core.reporting.render.IRenderExecutionContext" />
        </member>
        <member name="P:imbSCI.Reporting.script.docScriptStandaloneContextWrapper.context">
            <summary> </summary>
        </member>
        <member name="T:imbSCI.Reporting.script.exeAppenders.exeAppendBase">
            <summary>
            exeAppend is custom-code module injectable in <see cref="T:imbSCI.Reporting.script.docScript"/> execution pipeline.
            </summary>
            <seealso cref="T:imbSCI.Reporting.script.exeAppenders.IExeAppend" />
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendBase.name">
            <summary>
            Name for this instance - opional, used for content creation
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendBase.description">
            <summary>
            Human-readable description of object instance - optional used for content cretion
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendBase.record">
            <summary> </summary>
        </member>
        <member name="M:imbSCI.Reporting.script.exeAppenders.exeAppendBase.#ctor">
            <summary>
            The implementation requres parametarless constructor to be only one
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendBase.staticData">
             <summary>
            
             </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendBase.dataSet">
            <summary>
            Gets or sets the data set.
            </summary>
            <value>
            The data set.
            </value>
        </member>
        <member name="M:imbSCI.Reporting.script.exeAppenders.exeAppendBase.setData(System.Data.DataTable)">
            <summary>
            Sets the data.
            </summary>
            <param name="_data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.exeAppenders.exeAppendBase.setData(System.String,imbSCI.Core.collection.PropertyCollectionExtended)">
            <summary>
            Sets the data.
            </summary>
            <param name="key">The key.</param>
            <param name="_data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.exeAppenders.exeAppendBase.execute(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.reporting.render.ITextRender)">
            <summary>
            Executes the <see cref="T:imbSCI.Reporting.script.exeAppenders.exeAppendBase"/> instance
            </summary>
            <param name="context">The context.</param>
            <param name="render">The render.</param>
        </member>
        <member name="T:imbSCI.Reporting.script.exeAppenders.exeAppendContentExtensions">
            <summary>
            ToolKit that supports <c>exeAppend</c> library
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.script.exeAppenders.exeAppendContentExtensions.getExtensionList(imbSCI.Reporting.script.exeAppenders.exeAppendTemplateOptions)">
            <summary>
            Gets the search pattern.
            </summary>
            <param name="flags">The flags.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.exeAppenders.exeAppendContentExtensions.getSearchPattern(imbSCI.Reporting.script.exeAppenders.exeAppendTemplateOptions)">
            <summary>
            Gets the search pattern.
            </summary>
            <param name="flags">The flags.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.exeAppenders.exeAppendContentExtensions.DirectoryCopy(System.String,System.String,System.Boolean)">
            <summary>
            Directories the copy.
            </summary>
            <param name="sourceDirName">Name of the source dir.</param>
            <param name="destDirName">Name of the dest dir.</param>
            <param name="copySubDirs">if set to <c>true</c> [copy sub dirs].</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Source directory does not exist or could not be found: "
                                + sourceDirName</exception>
        </member>
        <member name="T:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem">
            <summary>
            Definition of content source
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem.type">
            <summary> </summary>
        </member>
        <member name="M:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem.#ctor(imbSCI.Reporting.script.exeAppenders.exeAppendTemplateOptions,System.String,imbSCI.Core.collection.PropertyCollectionExtended)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem"/> class.
            </summary>
            <param name="__options">The options.</param>
            <param name="__filePath">The source file/directory path</param>
            <param name="__data">Static data set used for template and filepath transformations.</param>
        </member>
        <member name="M:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem.getFromSource(imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Core.reporting.render.ITextRender,System.IO.DirectoryInfo,System.String)">
            <summary>
            Gets the source files into temporary directory, unpack it and returns list of all files aquired;
            </summary>
            <param name="context">The context.</param>
            <param name="render">The render.</param>
            <param name="deployDir">The deploy dir.</param>
            <param name="deployFilename">The deploy filename.</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem.setToTarget(System.Collections.Generic.List{System.String},imbSCI.Core.reporting.render.IRenderExecutionContext,imbSCI.Reporting.script.exeAppenders.exeAppendTemplatedBundle.targetOperaton,System.IO.DirectoryInfo,System.String)">
            <summary>
            Finalization
            </summary>
            <param name="sourceFiles">The source files.</param>
            <param name="context">The context.</param>
            <param name="targetOp">The target op.</param>
            <param name="deployDir">The deploy dir.</param>
            <param name="deployFilename">The deploy filename.</param>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem.targetFilename">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem.targetExtension">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem.target">
            <summary>Target for content deployment</summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem.operation">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem.searchPatternOption">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem.options">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem.filePath">
            <summary>File path to folder, archive file or some other type of package</summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateBundleItem.dedicatedData">
            <summary>Data dedicated to this template</summary>
        </member>
        <member name="T:imbSCI.Reporting.script.exeAppenders.exeAppendTemplatedBundle">
            <summary>
            exeAppend unit for content delivery, injection, transformation and link creation
            </summary>
            <seealso cref="T:imbSCI.Reporting.script.exeAppenders.exeAppendBase" />
            <seealso cref="T:imbSCI.Reporting.script.exeAppenders.IExeAppend" />
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplatedBundle.operation">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplatedBundle.targetExtension">
            <summary> </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.exeAppenders.exeAppendTemplatedBundle.STATIC_DATA_MAIN">
            <summary>
            The static data main
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.exeAppenders.exeAppendTemplatedBundle.STATIC_DATA_SECOND">
            <summary>
            The static data second
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.script.exeAppenders.exeAppendTemplatedBundle.#ctor(System.String,imbSCI.Core.collection.PropertyCollectionExtended)">
            <summary>
            Initializes a new instance of the <see cref="T:imbSCI.Reporting.script.exeAppenders.exeAppendTemplatedBundle"/> class.
            </summary>
            <param name="targetpath">The targetpath.</param>
            <param name="pce">The pce.</param>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplatedBundle.targetFilename">
            <summary> </summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplatedBundle.target">
            <summary>Target for content deployment</summary>
        </member>
        <member name="P:imbSCI.Reporting.script.exeAppenders.exeAppendTemplatedBundle.items">
            <summary> </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateOptions.htmlTemplate">
            <summary>
            The HTML template: it will process HTML files as templates
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateOptions.jsTemplate">
            <summary>
            The js template
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateOptions.jsonTemplate">
            <summary>
            The json template
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateOptions.xmlTemplate">
            <summary>
            The XML template
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateOptions.mdTemplate">
            <summary>
            The md template
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateOptions.cssTemplate">
            <summary>
            The CSS template
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.exeAppenders.exeAppendTemplateOptions.allTemplate">
            <summary>
            All template
            </summary>
        </member>
        <member name="T:imbSCI.Reporting.script.styleShotTargetEnum">
            <summary>
            tells when and on what to apply style instruction
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.styleShotTargetEnum.none">
            <summary>
            disable styling
            </summary>
        </member>
        <member name="F:imbSCI.Reporting.script.styleShotTargetEnum.unknown">
            <summary>
            Use default if exists
            </summary>
        </member>
        <member name="P:imbSCI.Reporting.wordpress.blocks.prototype.MultiItemContentBlockBase.itemTemplate">
            <summary>
            Template for a item
            </summary>
            <value>
            The item template.
            </value>
        </member>
        <member name="M:imbSCI.Reporting.wordpress.blocks.prototype.ReportContentBlockBase.Deploy">
            <summary>
            Initializes template strings and other settings
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.wordpress.blocks.prototype.ReportContentBlockBase.IsTemplateSet(System.String,System.Int32)">
            <summary>
            Determines whether given template string is ready for consumption
            </summary>
            <param name="template">The template.</param>
            <param name="numberOfPlaceholders">Required number of <see cref="M:System.String.Format(System.String,System.Object)"/> placeholders. Leave it zero to skip the placeholder check</param>
            <returns>
              <c>true</c> if [is template set] [the specified template]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:imbSCI.Reporting.wordpress.environment.permalinkStructure">
            <summary>
            Permalink generator - used to predict link of a document in the final deployement
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.wordpress.environment.permalinkStructure.GetPermalink(imbSCI.Reporting.wordpress.reportDocument,System.DateTime,System.Collections.Generic.Dictionary{imbSCI.Reporting.wordpress.environment.permalinkStructure.permalinkElements,System.String})">
            <summary>
            Gets the permalink.
            </summary>
            <param name="document">The document.</param>
            <param name="date">The date.</param>
            <param name="extraData">The extra data.</param>
            <returns></returns>
        </member>
        <member name="P:imbSCI.Reporting.wordpress.reportDocument.deployement_id">
            <summary>
            Universal identifier assigned during report deployement/publication
            </summary>
            <value>
            The deployement identifier.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.wordpress.reportDocument.LinkLabel">
            <summary>
            Overrides <c>Title</c> when used for inbound link rendering 
            </summary>
            <value>
            The link label.
            </value>
        </member>
        <member name="P:imbSCI.Reporting.wordpress.reportDocument.name">
            <summary>
            Alias of <see cref="P:imbSCI.Reporting.wordpress.reportDocument.Title"/>
            </summary>
        </member>
        <member name="M:imbSCI.Reporting.wordpress.reportDocumentTools.GetCategories(imbSCI.Reporting.wordpress.reportDocument,System.Boolean,System.Boolean)">
            <summary>
            Gets the categories> from leaf to root
            </summary>
            <param name="document">The document.</param>
            <param name="skipSelf">if set to <c>true</c> [skip self].</param>
            <param name="allowRootDocument">if set to <c>true</c> [allow root document].</param>
            <returns></returns>
        </member>
        <member name="M:imbSCI.Reporting.wordpress.reportDocumentTools.GetCategory(imbSCI.Reporting.wordpress.reportDocument,System.Boolean,System.Boolean)">
            <summary>
            Gets the category.
            </summary>
            <param name="document">The document.</param>
            <param name="skipSelf">in case <c>document</c> is a category, if set to <c>true</c> it will not include it into consideration</param>
            <param name="allowRootDocument">if set to <c>true</c> [allow root document].</param>
            <returns></returns>
        </member>
    </members>
</doc>
